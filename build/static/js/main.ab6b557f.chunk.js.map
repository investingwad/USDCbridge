{"version":3,"sources":["reportWebVitals.js","config.js","walletProvider.js","logic/actions/actions.js","abi.js","ethComponent.js","modal.js","wallets.js","eosComponent.js","eostransaction.js","App.js","logic/reducers/eth.reducer.js","logic/reducers/user.reducer.js","logic/reducers/store.js","logic/reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","tables","contracts","eosEndpoint","dspEndpoint","Actions","Docs","this","accessContext","initAccessContext","appName","network","protocol","host","port","chainId","walletProviders","scatter","AnchorLinkProvider","Math","random","toString","substring","wallet","undefined","index","getWalletProviders","selectedProvider","initWallet","connect","login","terminate","type","username","tokenAbi","bridgeAddress","web3","Web3","schema","Yup","shape","value","required","test","val","parseFloat","token","initialValues","usdcContract","eth","Contract","daiContract","brigeContract","Ethereum","useSelector","state","user","walletConnected","address","ethWalletConnected","useState","loading","setLoading","checked","setChecked","errorMsg","seterrorMsg","successMsg","setsuccessMsg","approvedMsg","setapprovedMsg","sendToken","stakeAMount","tokenId","a","methods","send","from","on","hash","console","log","receipt","transactionHash","confirmationNumber","error","message","approveAndSendToken","contract","approvedAmount","utils","toWei","approve","handleSubmit","values","alert","allowance","call","closeTab","className","validationSchema","onSubmit","name","placeholder","as","onChange","disabled","href","target","rel","onClick","Modal","props","children","show","React","ConnectModal","closeModal","toggleLogin","dispatch","useDispatch","active","setActive","connectWallet","WalletProvider","getWallet","auth","accountName","localStorage","setItem","ethereum_address","require","fetch","updateSchema","newaddress","isAddress","initialUpdate","options","httpEndpoint","eos","EosApi","Eos","ethwalletConnected","setShow","regstloading","setRegisterLoading","updateloading","setUpdateLoading","gasloading","setGasLoading","ethloading","setEthLoading","eosloading","setEosLoading","regerrorMsg","setregerrorMsg","errorMesg","seterrorMesg","successMesg","setsuccessMesg","regsuccessMsg","setregsuccessMsg","ethaddress","setAddress","registerfee","setRegisterFee","registerSchema","initialRegister","useEffect","getTableRows","code","scope","table","json","requests","rows","length","registrationfee","fee","getfees","connectToWallet","disconnectWallet","clear","handleRegister","retrycount","eosApi","transact","actions","account","authorization","actor","permission","data","to","quantity","memo","broadcast","blocksBehind","expireSeconds","result","response","api","Api","rpc","JsonRpc","signatureProvider","pushSignedTransaction","retry","bail","num","res","retries","includes","handleUpdate","newethaddress","updateGasPrice","updateEthPrice","updateEosPrice","connectToMetamask","window","ethereum","request","method","accounts","setFieldValue","EosTransaction","balances","setUserBalances","setSymbols","usdcfee","setUsdcFee","daifee","setDaiFee","loggedIn","getTokens","tokens","map","row","push","dtoken","getBalance","userbal","symbol","tokensData","limit","table_key","body","JSON","stringify","responses","tokensdata","balanceRow","find","balance","split","usdcreq","daireq","minfeewithdraw","getbal","handleTransfer","toAcc","toFixed","App","setLoggedIn","logged","walletType","getItem","parseInt","initialState","ethReducer","action","userReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6b557f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const tables = {\n    Accounts: 'accounts',\n    Symbols: 'acceptedsym',\n    Configs: 'configset',\n    FEE_TAB: 'feesettings'\n}\n\nexport const contracts = {\n    BRIDGE_CON: 'dadusdbridge',\n    TokenContract: 'dadusdtokens',\n    EosTokenContract: 'eosio.token'\n}\n\n\nexport const eosEndpoint = \"https://eos.greymass.com\";\n\nexport const dspEndpoint = {\n    protocol: 'https',\n    endpoint: 'dsp1tlv.dappsolutions.app',\n    port: 443,\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'\n}\n\nexport const walletEndpoint = {\n    protocol: 'https',\n    endpoint: 'eos.greymass.com',\n    port: 443,\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'\n}\n\nexport const Actions = {\n    Transfer: 'transfer',\n    RegisterEth: 'registereth',\n    ModifyEth: 'modethadress',\n    SetGasPrice: 'setgasprice',\n    SetEthPrice: 'setethprice',\n    SetEosPrice: 'seteosprice'\n}\n\nexport const Docs = {\n    Ethdoc: 'https://docs.google.com/document/u/1/d/14K6_DT-pqmBsAd3tLoHD-SKhPO1WCFW7unMKTMzxKx4/edit?usp=sharing',\n    Eosdoc: 'https://docs.google.com/document/d/1peh47G369IqMjHkA3FptsODB5kRNN0DBSc17GNvzX1Q/edit?usp=sharing'\n}","import { initAccessContext } from 'eos-transit'\nimport scatter from 'eos-transit-scatter-provider'\nimport AnchorLinkProvider from 'eos-transit-anchorlink-provider'\nimport { dspEndpoint } from './config';\n\nclass WalletProvider {\n    accessContext;\n    wallet;\n\n    constructor() {\n        this.accessContext = initAccessContext({\n            appName: 'bridge_app',\n            network: {\n                protocol: dspEndpoint.protocol,\n                host: dspEndpoint.endpoint,\n                port: dspEndpoint.port,\n                chainId: dspEndpoint.chainId\n            },\n            walletProviders: [\n                scatter(),\n                AnchorLinkProvider(Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15))\n            ]\n        })\n\n        this.wallet = undefined\n    }\n\n    async login(index) {\n        const walletProviders = this.accessContext.getWalletProviders()\n        const selectedProvider = walletProviders[index]\n        const wallet = this.accessContext.initWallet(selectedProvider)\n        this.wallet = wallet\n\n        await wallet.connect()\n        await wallet.login()\n    }\n\n    getWallet() {\n        return this.wallet\n    }\n\n    async disconnectWallet() {\n        if (!!this.wallet) {\n            await this.wallet.terminate()\n            this.wallet = undefined\n        }\n    }\n}\n\nexport default new WalletProvider()","export const login = ({ username }) => {\n    return {\n        type: 'LOGIN',\n        username\n    }\n}\n\nexport const Ethlogin = ({ address }) => {\n    return {\n        type: 'ETHLOGIN',\n        address\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}","export const tokenAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"_initialAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_tokenName\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimalUnits\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_tokenSymbol\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"allocateTo\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n        }],\n        \"name\": \"balanceOf\",\n        \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [{\n            \"internalType\": \"uint8\",\n            \"name\": \"\",\n            \"type\": \"uint8\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"src\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n\nexport const bridgeAbi = [{\n        \"anonymous\": false,\n        \"inputs\": [{\n            \"indexed\": false,\n            \"internalType\": \"bytes\",\n            \"name\": \"reason\",\n            \"type\": \"bytes\"\n        }],\n        \"name\": \"Failure\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes\",\n                \"name\": \"reason\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"Receipt\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes\",\n                \"name\": \"reason\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"Refund\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"_message\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"pushInboundMessage\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\",\n        \"payable\": true\n    },\n    {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimGas\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\",\n        \"payable\": true\n    }\n]\nexport const usdcAddress = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\n\nexport const bridgeAddress = \"0x151982ebf8fbbb8979167b64b729f5f5c43562db\";\n\nexport const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";","import * as Web3 from \"web3\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  usdcAddress,\n  bridgeAbi,\n  bridgeAddress,\n  daiAddress,\n  tokenAbi,\n} from \"./abi\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Docs } from \"./config\";\n\nconst web3 = new Web3(Web3.givenProvider);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\n      \"lowAmount\",\n      `Should be greater than 0`,\n      (val) => parseFloat(val) > 0\n    ),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"USDC\",\n};\n\nconst usdcContract = new web3.eth.Contract(tokenAbi, usdcAddress);\nconst daiContract = new web3.eth.Contract(tokenAbi, daiAddress);\nconst brigeContract = new web3.eth.Contract(bridgeAbi, bridgeAddress);\n\nconst Ethereum = () => {\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const address = useSelector((state) => state.address.address);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const [loading, setLoading] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n  const [approvedMsg, setapprovedMsg] = useState(\"\");\n\n  const sendToken = async (stakeAMount, tokenId) => {\n    brigeContract.methods\n      .sendToken(stakeAMount, tokenId)\n      .send({\n        from: address,\n      })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash  sendToken\", hash);\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"receipt sendToken\", receipt);\n        setLoading(false);\n        setsuccessMsg(receipt.transactionHash);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"confirmationNumber sendToken\", confirmationNumber);\n        console.log(\"receipt sendToken\", receipt);\n      })\n      .on(\"error\", (error) => {\n        console.log(\"error sendToken\", error);\n        setLoading(false);\n        seterrorMsg(error.message);\n      });\n  };\n\n  const approveAndSendToken = async (stakeAMount, tokenId, token) => {\n    console.log(\"inside approve and send token\");\n\n    setLoading(true);\n\n    const contract = token === \"USDC\" ? usdcContract : daiContract;\n\n    let approvedAmount = \"\";\n\n    if (checked) {\n      approvedAmount =\n        token === \"USDC\"\n          ? web3.utils.toWei(\"10000000000000000\", \"mwei\")\n          : web3.utils.toWei(\"10000000000000000\", \"ether\");\n    } else {\n      approvedAmount = stakeAMount;\n    }\n\n    console.log(\"approved amount \", approvedAmount);\n\n    contract.methods\n      .approve(bridgeAddress, approvedAmount)\n      .send({\n        from: address,\n      })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash approve \", hash);\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"receipt approve\", receipt);\n        setapprovedMsg(receipt.transactionHash);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"confirmationNumber approve\", confirmationNumber);\n        console.log(\"receipt approve\", receipt);\n      })\n      .on(\"error\", (error) => {\n        console.log(\"error approve\", error);\n        setLoading(false);\n        seterrorMsg(error.message);\n      })\n      .then(() => {\n        brigeContract.methods\n          .sendToken(stakeAMount, tokenId)\n          .send({\n            from: address,\n          })\n          .on(\"transactionHash\", (hash) => {\n            console.log(\"transactionHash  sendToken\", hash);\n          })\n          .on(\"receipt\", (receipt) => {\n            console.log(\"receipt sendToken\", receipt);\n            setLoading(false);\n            setsuccessMsg(receipt.transactionHash);\n          })\n          .on(\"confirmation\", (confirmationNumber, receipt) => {\n            console.log(\"confirmationNumber sendToken\", confirmationNumber);\n            console.log(\"receipt sendToken\", receipt);\n          })\n          .on(\"error\", (error) => {\n            console.log(\"error sendToken\", error);\n            setLoading(false);\n            seterrorMsg(error.message);\n          });\n      });\n  };\n\n  const handleSubmit = async (values) => {\n    console.log(\"values \", values);\n\n    if (!address) {\n      alert(\"Please connect to metamask first\");\n      return;\n    }\n\n    const { value, token } = values;\n\n    console.log(\"value \", value);\n\n    const tokenId = token === \"USDC\" ? 0 : 1;\n\n    const contract = token === \"USDC\" ? usdcContract : daiContract;\n\n    const stakeAMount =\n      token === \"USDC\"\n        ? web3.utils.toWei(value, \"mwei\")\n        : web3.utils.toWei(value, \"ether\");\n\n    console.log(\"stakeAMount \", stakeAMount);\n\n    const approvedAmount = await contract.methods\n      .allowance(address, bridgeAddress)\n      .call();\n\n    console.log(\"approvedAmount in contract \", approvedAmount);\n\n    if (approvedAmount > stakeAMount) {\n      sendToken(stakeAMount, tokenId);\n    } else {\n      approveAndSendToken(stakeAMount, tokenId, token);\n    }\n  };\n\n  const closeTab = () => {\n    if (errorMsg) {\n      seterrorMsg(\"\");\n    }\n    if (successMsg) {\n      setsuccessMsg(\"\");\n    }\n    if (approvedMsg) {\n      setapprovedMsg(\"\");\n    }\n  };\n\n  console.log(\"checked \", checked);\n\n  return (\n    <div className=\"form-container\">\n      <div>4. Send Tokens Ethereum to EOS</div>\n      <div className=\"login\">\n        <div className=\"tokenform\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            <Form>\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  <option value=\"USDC\">USDC</option>\n                  <option value=\"DAI\">DAI</option>\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" />\n              </div>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={checked}\n                  onChange={() => setChecked(!checked)}\n                  disabled={loading}\n                />\n                <span>Infinite Approval</span>\n              </label>\n              <div>\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n\n      <a href={Docs.Ethdoc} target=\"_blank\" rel=\"noreferrer\">\n        Click here for help\n      </a>\n\n      {errorMsg ? (\n        <div className=\"errorMsg\">\n          <div className=\"close\" onClick={closeTab}>\n            x\n          </div>\n          <div className=\"errmsg\">Error</div>\n          <p className=\"error\">{errorMsg}</p>\n        </div>\n      ) : successMsg ? (\n        <div className=\"successMsg\">\n          <div className=\"close\" onClick={closeTab}>\n            x\n          </div>\n          <div className=\"msg\">Success</div>\n          {approvedMsg ? (\n            <>\n              <p className=\"para\">\n                Check approved trx :\n                <a\n                  href={`https://etherscan.io/tx/${approvedMsg}`}\n                  className=\"link\"\n                >\n                  {approvedMsg}\n                </a>\n              </p>\n\n              <p className=\"para\">\n                Check deposit trx :\n                <a href={successMsg} className=\"link\">\n                  {successMsg}\n                </a>\n              </p>\n            </>\n          ) : (\n            <>\n              <div>Check transaction :</div>\n              <a\n                href={`https://etherscan.io/tx/${successMsg}`}\n                className=\"link\"\n              >\n                {successMsg}\n              </a>\n            </>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Ethereum;\n","const Modal = (props) => {\n\n    const { children, show } = props\n    return (\n        <>\n        {show?\n        <div className=\"modalcontainer\">\n            {children}\n        </div>\n        :null\n        }\n        </>\n    )\n}\n\nexport default Modal","import * as React from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./logic/actions/actions\";\n\nconst { useState } = React;\n\nconst ConnectModal = (props) => {\n  const { closeModal, toggleLogin } = props;\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [active, setActive] = useState(-1);\n\n  const connectWallet = async (index) => {\n    try {\n      setActive(index);\n      setLoading(true);\n      await WalletProvider.login(index);\n      const wallet = WalletProvider.getWallet();\n      dispatch(login({ username: wallet?.auth?.accountName }));\n      toggleLogin(true)\n      localStorage.setItem(\"walletType\", index.toString());\n      console.log(\"wallet11-----\", wallet);\n      closeModal();\n\n    } catch (e) {\n      console.log(\"something went wrong \", e);\n    } finally {\n      setLoading(false);\n      setActive(-1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n        Connect wallet\n        <div className=\"closeBtn\" onClick={closeModal}>\n          <p className=\"close-text\">close</p>\n        </div>\n      </div>\n      <div>\n        <button onClick={() => connectWallet(0)} disabled={loading}>\n          {loading && active === 0 ? \"connecting\" : \"Connect with scatter\"}\n        </button>\n      </div>\n      <div>\n        <button onClick={() => connectWallet(1)} disabled={loading}>\n          {loading && active === 1 ? \"connecting\" : \"Connect with Anchor\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectModal;\n","import { useState, useEffect } from \"react\";\nimport Modal from \"./modal\";\nimport ConnectModal from \"./wallets\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"./logic/actions/actions\";\nimport { Ethlogin } from \"./logic/actions/actions\";\nimport { Api, JsonRpc } from \"eosjs\";\nimport { TextDecoder, TextEncoder } from \"util\";\n// import { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'\n//@ts-ignore\nimport EosApi from \"eosjs-api\";\nimport * as retry from \"async-retry\";\nimport {\n  Actions,\n  contracts,\n  Docs,\n  dspEndpoint,\n  eosEndpoint,\n  tables,\n  walletEndpoint,\n} from \"./config\";\nconst ethereum_address = require(\"ethereum-address\");\nconst fetch = require(\"node-fetch\");\n\nconst updateSchema = Yup.object().shape({\n  newaddress: Yup.string()\n    .required(\"Enter new ethereum address\")\n    .test(\"ethereumaddress\", `Invalid ethereum address`, (address) =>\n      ethereum_address.isAddress(address)\n    ),\n});\n\nconst initialUpdate = {\n  newaddress: \"\",\n};\n\nconst options = {\n  httpEndpoint: eosEndpoint,\n};\nconst eos = EosApi(options);\n\nconst Eos = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [regstloading, setRegisterLoading] = useState(false);\n  const [updateloading, setUpdateLoading] = useState(false);\n  const [gasloading, setGasLoading] = useState(false);\n  const [ethloading, setEthLoading] = useState(false);\n  const [eosloading, setEosLoading] = useState(false);\n  const [regerrorMsg, setregerrorMsg] = useState(\"\");\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n  const [errorMesg, seterrorMesg] = useState(\"\");\n  const [successMesg, setsuccessMesg] = useState(\"\");\n  const [regsuccessMsg, setregsuccessMsg] = useState(\"\");\n  const [ethaddress, setAddress] = useState(\"\");\n  const [registerfee, setRegisterFee] = useState(\"0.0000 EOS\");\n\n  const registerSchema = Yup.object().shape({\n    address: Yup.string()\n      .required(\"Enter ethereum address\")\n      .test(\"ethereumaddress\", `Invalid ethereum address`, (address) => {\n        return ethereum_address.isAddress(address);\n      }),\n  });\n\n  const initialRegister = {\n    address: ethaddress,\n  };\n\n  useEffect(() => {\n    const getfees = async () => {\n      const requests = await eos.getTableRows({\n        code: contracts.BRIDGE_CON,\n        scope: contracts.BRIDGE_CON,\n        table: tables.Configs,\n        json: \"true\",\n      });\n      if (requests.rows.length) {\n        const fee = await requests.rows[0].registrationfee;\n        setRegisterFee(fee);\n      }\n    };\n    getfees();\n  }, []);\n\n  const closeModal = () => {\n    setShow(false);\n  };\n\n  const connectToWallet = async () => {\n    if (walletConnected) {\n      try {\n        const wallet = WalletProvider.getWallet();\n        if (!!wallet) {\n          await WalletProvider.disconnectWallet();\n          dispatch(logout());\n          localStorage.clear();\n          props.toggleLogin(false);\n        }\n      } catch (e) {\n        console.log(\"something went wrong \", e);\n      }\n    } else {\n      setShow(true);\n    }\n  };\n\n  const handleRegister = async (values) => {\n    let retrycount = 0;\n    try {\n      const eosAmount = 1;\n      const wallet = WalletProvider.getWallet();\n      const { address } = values;\n      if (!walletConnected) {\n        setregerrorMsg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        setregerrorMsg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        setRegisterLoading(true);\n        let res;\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: contracts.EosTokenContract,\n                name: Actions.Transfer,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: contracts.BRIDGE_CON,\n                  quantity: registerfee,\n                  memo: \"registration fees\",\n                },\n              },\n              {\n                account: contracts.BRIDGE_CON,\n                name: Actions.RegisterEth,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  account: wallet.auth.accountName,\n                  ethaddress: address,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: false,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        console.log(\"result----\", result);\n        let response = \"\";\n        try {\n          const api = new Api({\n            rpc: new JsonRpc(eosEndpoint, { fetch }),\n            signatureProvider: wallet.eosApi.signatureProvider,\n          });\n          await api.pushSignedTransaction(result);\n          await retry(\n            async (bail, num) => {\n              if (num < 4) {\n                await api.pushSignedTransaction(result);\n              } else {\n                try {\n                  res = await api.pushSignedTransaction(result);\n                  response = res;\n                } catch (e) {\n                  response = e.message;\n                }\n              }\n            },\n            {\n              retries: 3,\n            }\n          );\n        } catch (e) {\n          setregerrorMsg(e.message);\n          setRegisterLoading(false);\n        }\n        if (response) {\n          console.log(\"retrycount---\", retrycount);\n          console.log(\"error--\", response);\n          if (\n            response.includes(\n              \"Account already registered. call update method to update ethaddress\"\n            ) ||\n            response.includes(\"duplicate transaction\") ||\n            response.includes(\"key already exists\")\n          ) {\n            setRegisterLoading(false);\n            setregsuccessMsg(\"Transaction Success\");\n            setregerrorMsg(\"\");\n          } else {\n            setregerrorMsg(response);\n            setRegisterLoading(false);\n          }\n        }\n      } else {\n        setRegisterLoading(false);\n      }\n    } catch (e) {\n      setregerrorMsg(e.message);\n      setRegisterLoading(false);\n    } finally {\n      setRegisterLoading(false);\n    }\n  };\n\n  const handleUpdate = async (values) => {\n    try {\n      const wallet = WalletProvider.getWallet();\n      const { newaddress } = values;\n      if (!walletConnected) {\n        seterrorMsg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        seterrorMsg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        setUpdateLoading(true);\n        let res;\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: contracts.EosTokenContract,\n                name: Actions.Transfer,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: contracts.BRIDGE_CON,\n                  quantity: registerfee,\n                  memo: \"modification fees\",\n                },\n              },\n              {\n                account: contracts.BRIDGE_CON,\n                name: Actions.ModifyEth,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  account: wallet.auth.accountName,\n                  newethaddress: newaddress,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: false,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        console.log(\"result----\", result);\n        let response = \"\";\n        try {\n          const api = new Api({\n            rpc: new JsonRpc(eosEndpoint, { fetch }),\n            signatureProvider: wallet.eosApi.signatureProvider,\n          });\n          await api.pushSignedTransaction(result);\n          await retry(\n            async (bail, num) => {\n              if (num < 4) {\n                await api.pushSignedTransaction(result);\n              } else {\n                try {\n                  res = await api.pushSignedTransaction(result);\n                  response = res;\n                } catch (e) {\n                  response = e.message;\n                }\n              }\n            },\n            {\n              retries: 3,\n            }\n          );\n        } catch (e) {\n          seterrorMsg(e.message);\n          setUpdateLoading(false);\n        }\n        if (response) {\n          console.log(\"error--\", response);\n          if (\n            response.includes(\n              \"Account already registered. call update method to update ethaddress\"\n            ) ||\n            response.includes(\"duplicate transaction\") ||\n            response.includes(\"key already exists\")\n          ) {\n            setUpdateLoading(false);\n            setsuccessMsg(\"Transaction Success\");\n            seterrorMsg(\"\");\n          } else {\n            seterrorMsg(response);\n            setUpdateLoading(false);\n          }\n        }\n      } else {\n        setUpdateLoading(false);\n      }\n    } catch (e) {\n      seterrorMsg(e.message);\n      setUpdateLoading(false);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n\n  const updateGasPrice = async () => {\n    try {\n      const wallet = WalletProvider.getWallet();\n      if (!walletConnected) {\n        seterrorMesg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        seterrorMesg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        console.log(\"wallet---\", wallet);\n        setGasLoading(true);\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: contracts.BRIDGE_CON,\n                name: Actions.SetGasPrice,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {},\n              },\n            ],\n          },\n          {\n            broadcast: false,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setGasLoading(false);\n          setsuccessMesg(\"Transaction Success\");\n          seterrorMesg(\"\");\n        }\n      }\n    } catch (e) {\n      setGasLoading(false);\n    } finally {\n      setGasLoading(false);\n    }\n  };\n\n  const updateEthPrice = async () => {\n    try {\n      const wallet = WalletProvider.getWallet();\n      if (!walletConnected) {\n        seterrorMesg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        seterrorMesg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        setEthLoading(true);\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: contracts.BRIDGE_CON,\n                name: Actions.SetEthPrice,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {},\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setEthLoading(false);\n          setsuccessMesg(\"Transaction Success\");\n          seterrorMesg(\"\");\n        }\n      }\n    } catch (e) {\n      setEthLoading(false);\n    } finally {\n      setEthLoading(false);\n    }\n  };\n\n  const updateEosPrice = async () => {\n    try {\n      const wallet = WalletProvider.getWallet();\n      if (!walletConnected) {\n        seterrorMesg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        seterrorMesg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        setEosLoading(true);\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: contracts.BRIDGE_CON,\n                name: Actions.SetEosPrice,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {},\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setEosLoading(false);\n          setsuccessMesg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      }\n    } catch (e) {\n      setEosLoading(false);\n    } finally {\n      setEosLoading(false);\n    }\n  };\n\n  const connectToMetamask = async () => {\n    try {\n      const { ethereum } = window;\n      const { chainId } = ethereum;\n\n      if (chainId === \"0x1\") {\n        if (!!ethereum) {\n          const accounts = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n          setAddress(accounts[0]);\n          dispatch(Ethlogin({ address: accounts[0] }));\n        }\n      } else {\n        alert(\"Please select Ethereum Main Network (Mainnet) then connect\");\n      }\n    } catch (e) {\n      console.log(\"something went wrong \", e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"form-container\">\n        <div>1. Register Ethereum Address on EOS</div>\n        <div className=\"login\">\n          <button className=\"loginbtn\" onClick={connectToWallet}>\n            {walletConnected\n              ? `Logout From ${username}`\n              : \"Connect to Eos Wallet\"}\n          </button>\n          <button onClick={connectToMetamask}>\n            {!!ethaddress ? \"Connected\" : \"Connect to metamask\"}\n          </button>\n          <div className=\"register\">\n            <Formik\n              initialValues={initialRegister}\n              validationSchema={registerSchema}\n              onSubmit={handleRegister}\n            >\n              {({ setFieldValue }) => (\n                <Form>\n                  <div>\n                    <Field\n                      name=\"address\"\n                      placeholder=\"enter ethereum address\"\n                      onClick={() => setFieldValue(\"address\", ethaddress)}\n                    />\n                  </div>\n                  <div>\n                    <ErrorMessage name=\"address\" className=\"error\" />\n                  </div>\n                  <div>\n                    <div className=\"note\">\n                      Note:- Current registration fee {registerfee} will be\n                      deducted from your account.\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"sendbtn\"\n                      disabled={regstloading}\n                    >\n                      {regstloading ? \"registering\" : \"Register\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n        <a href={Docs.Eosdoc} target=\"_blank\" rel=\"noreferrer\">\n          Click here for help\n        </a>\n        {regerrorMsg ? (\n          <div className=\"error\">{regerrorMsg}</div>\n        ) : (\n          <div className=\"success\">{regsuccessMsg}</div>\n        )}\n        {show ? (\n          <Modal show={show}>\n            <ConnectModal\n              closeModal={closeModal}\n              toggleLogin={props.toggleLogin}\n            />\n          </Modal>\n        ) : null}\n      </div>\n\n      <div className=\"form-container\">\n        <div>2. Update Prices (Ethereum Gas, EOS, ETH) </div>\n        <div className=\"login\">\n          <div className=\"register\">\n            <button\n              className=\"pricebtn\"\n              disabled={gasloading}\n              onClick={updateGasPrice}\n            >\n              {gasloading ? \"updating\" : \"Update GAS Price\"}\n            </button>\n\n            <button\n              className=\"pricebtn\"\n              disabled={ethloading}\n              onClick={updateEthPrice}\n            >\n              {ethloading ? \"updating\" : \"Update ETH Price\"}\n            </button>\n\n            <button\n              className=\"pricebtn\"\n              disabled={eosloading}\n              onClick={updateEosPrice}\n            >\n              {eosloading ? \"updating\" : \"Update EOS Price\"}\n            </button>\n          </div>\n        </div>\n        {errorMesg ? (\n          <div className=\"error\">{errorMesg}</div>\n        ) : (\n          <div className=\"success\">{successMesg}</div>\n        )}\n      </div>\n\n      <div className=\"form-container\">\n        <div>3. Modify Ethereum Address on EOS</div>\n        <div className=\"login\">\n          <div className=\"register\">\n            <Formik\n              initialValues={initialUpdate}\n              validationSchema={updateSchema}\n              onSubmit={handleUpdate}\n            >\n              {({ setFieldValue }) => (\n                <Form>\n                  <div>\n                    <Field\n                      name=\"newaddress\"\n                      placeholder=\"enter new ethereum address\"\n                      onClick={() => setFieldValue(\"newaddress\", ethaddress)}\n                    />\n                  </div>\n                  <div>\n                    <ErrorMessage name=\"newaddress\" className=\"error\" />\n                  </div>\n                  <div>\n                    <div className=\"note\">\n                      Note:- Current modification fee {registerfee} will be\n                      deducted from your account.\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"sendbtn\"\n                      disabled={updateloading}\n                    >\n                      {updateloading ? \"updating\" : \"Update Address\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n        {errorMsg ? (\n          <div className=\"error\">{errorMsg}</div>\n        ) : (\n          <div className=\"success\">{successMsg}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Eos;\n","import { useState, useEffect } from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n//@ts-ignore\nimport EosApi from \"eosjs-api\";\nimport { Actions, contracts, eosEndpoint, tables } from \"./config\";\n\nconst options = {\n  httpEndpoint: eosEndpoint,\n};\nconst eos = EosApi(options);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\"lowAmount\", `Should be greater than 0`, (val) => parseFloat(val) > 0),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"6,USDC\",\n};\n\nconst EosTransaction = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const [balances, setUserBalances] = useState([]);\n  const [tokenSymbol, setSymbols] = useState([\"4,USDC\"]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n  const [usdcfee, setUsdcFee] = useState(\"0.000000 USDC\");\n  const [daifee, setDaiFee] = useState(\"0.000000 DAI\");\n\n  const { loggedIn } = props;\n  const getTokens = async () => {\n    let tokens = [];\n    const requests = await eos.getTableRows({\n      code: contracts.BRIDGE_CON,\n      scope: contracts.BRIDGE_CON,\n      table: tables.Symbols,\n      json: \"true\",\n    });\n    if (requests.rows.length) {\n      requests.rows.map((row) => {\n        tokens.push(row.dtoken.toString());\n      });\n    }\n    setSymbols(tokens);\n    return tokens;\n  };\n\n  const getBalance = async (tokens, account) => {\n    const userbal = [];\n    try {\n      if (tokens.length) {\n        for (const symbol of tokens) {\n          let code;\n          // let toAcc;\n          code = contracts.TokenContract;\n          const tokensData = {\n            code: code,\n            json: true,\n            limit: 1000,\n            scope: account,\n            table: tables.Accounts,\n            table_key: account,\n          };\n          const responses = await fetch(\n            `${eosEndpoint}/v1/chain/get_table_rows`,\n            {\n              method: \"post\",\n              body: JSON.stringify(tokensData),\n            }\n          );\n\n          const tokensdata = await responses.json();\n\n          if (tokensdata.rows.length) {\n            const balanceRow = tokensdata.rows.find(\n              (row) => row.balance.split(\" \")[1] == symbol.split(\",\")[1]\n            );\n            userbal.push(balanceRow.balance);\n          }\n        }\n        setUserBalances(userbal);\n      }\n    } catch (e) {\n      setUserBalances(userbal);\n    }\n  };\n\n  useEffect(() => {\n    const getfees = async () => {\n      const usdcreq = await eos.getTableRows({\n        code: contracts.BRIDGE_CON,\n        scope: \"USDC\",\n        table: tables.FEE_TAB,\n        json: \"true\",\n      });\n      const daireq = await eos.getTableRows({\n        code: contracts.BRIDGE_CON,\n        scope: \"DAI\",\n        table: tables.FEE_TAB,\n        json: \"true\",\n      });\n      if (usdcreq.rows.length) {\n        const fee = await usdcreq.rows[0].minfeewithdraw;\n        setUsdcFee(fee);\n      }\n      if (daireq.rows.length) {\n        const fee = await daireq.rows[0].minfeewithdraw;\n        setDaiFee(fee);\n      }\n    };\n    getfees();\n  }, []);\n\n  useEffect(() => {\n    getTokens();\n    const getbal = async () => {\n      const tokens = await getTokens();\n      if (walletConnected && tokens.length) {\n        await getBalance(tokens, username);\n      }\n    };\n    if (loggedIn) {\n      getbal();\n    }\n    if (!loggedIn) {\n      setUserBalances([]);\n    }\n  }, [loggedIn]);\n\n  const handleTransfer = async (values) => {\n    try {\n      const { value, token } = values;\n      console.log('value', value , 'token', token)\n      const wallet = WalletProvider.getWallet();\n      if (!walletConnected) {\n        seterrorMsg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        seterrorMsg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        setLoading(true);\n        let account;\n        let toAcc;\n        account = contracts.TokenContract;\n        toAcc = contracts.BRIDGE_CON;\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: account,\n                name: Actions.Transfer,\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: toAcc,\n                  quantity: `${parseFloat(value).toFixed(\n                    parseFloat(token.split(\",\")[0])\n                  )} ${token.split(\",\")[1]} `,\n                  memo: `Transfer ${token.split(\",\")[1]} token`,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setLoading(false);\n          setsuccessMsg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (e) {\n      seterrorMsg(e.message);\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div>5. Send Tokens EOS to Ethereum</div>\n      <div className=\"login\">\n        <div className=\"register\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleTransfer}\n          >\n            <Form>\n              {balances.map((balance) => (\n                <div className=\"userbalance\">{balance}</div>\n              ))}\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" className=\"error\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  <option value=\"6,USDC\">USDC</option>\n                  <option value=\"6,DAI\">DAI</option>\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" className=\"error\" />\n              </div>\n              <div className=\"notefee\">\n                Note: Current withdraw fee is {usdcfee} and {daifee} set\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"registerbtn\"\n                  disabled={loading}\n                >\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n      {errorMsg ? (\n        <div className=\"error\">{errorMsg}</div>\n      ) : (\n        <div className=\"success\">{successMsg}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EosTransaction;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport WalletProvider from \"./walletProvider\";\nimport { login } from \"./logic/actions/actions\";\nimport Ethereum from \"./ethComponent\";\nimport Eos from \"./eosComponent\";\nimport EosTransaction from \"./eostransaction\";\n\nconst { useEffect, useState } = React;\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const toggleLogin = (logged) => {\n    setLoggedIn(logged);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const connectWallet = async (walletType) => {\n      try {\n        await WalletProvider.login(walletType);\n        const wallet = WalletProvider.getWallet();\n\n        if (!!wallet) {\n          dispatch(login({ username: wallet?.auth?.accountName }));\n          toggleLogin(true);\n        }\n      } catch (e) {\n        console.log(\"something went wrong \", e);\n      }\n    };\n\n    const walletType = localStorage.getItem(\"walletType\");\n\n    if (!!walletType) {\n      let wallet = parseInt(walletType);\n\n      if (wallet >= 0) {\n        connectWallet(wallet);\n      }\n    }\n  }, []);\n\n  return (\n    <div>\n      <Eos toggleLogin={toggleLogin} />\n      <Ethereum />\n      <EosTransaction loggedIn={loggedIn} />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    ethWalletConnected: false,\n    address: '',\n}\n\nconst ethReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ETHLOGIN\":\n            return {\n                ...state,\n                ethWalletConnected: true,\n                address: action.address\n            }\n        default:\n            return state\n    }\n}\n\nexport default ethReducer","const initialState = {\n    walletConnected: false,\n    username: '',\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            return {\n                ...state,\n                walletConnected: true,\n                username: action.username\n            }\n\n        case \"LOGOUT\":\n            return {\n                ...state,\n                walletConnected: false,\n                username: ''\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import { createStore, combineReducers } from 'redux'\nimport ethReducer from './eth.reducer'\nimport userReducer from './user.reducer'\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    address: ethReducer\n})\n\nconst store = createStore(rootReducer)\n\nexport default store","import store from './store'\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport store from './logic/reducers'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n   <React.StrictMode >\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}