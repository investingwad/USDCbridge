{"version":3,"sources":["reportWebVitals.js","walletProvider.js","logic/actions/actions.js","abi.js","ethComponent.js","modal.js","wallets.js","config.js","eosComponent.js","eostransaction.js","App.js","logic/reducers/eth.reducer.js","logic/reducers/user.reducer.js","logic/reducers/store.js","logic/reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","this","accessContext","initAccessContext","appName","network","protocol","host","port","chainId","walletProviders","scatter","AnchorLinkProvider","Math","random","toString","substring","wallet","undefined","index","getWalletProviders","selectedProvider","initWallet","connect","login","terminate","type","username","tokenAbi","bridgeAddress","web3","Web3","schema","Yup","shape","value","required","test","val","parseFloat","token","initialValues","usdcContract","eth","Contract","daiContract","brigeContract","Ethereum","useSelector","state","user","walletConnected","address","ethWalletConnected","useState","loading","setLoading","checked","setChecked","sendToken","stakeAMount","tokenId","a","console","log","methods","send","from","on","hash","receipt","confirmationNumber","error","approveAndSendToken","contract","approvedAmount","utils","toWei","approve","handleSubmit","values","alert","allowance","call","className","validationSchema","onSubmit","name","placeholder","as","onChange","disabled","href","target","rel","Modal","props","children","show","React","ConnectModal","closeModal","toggleLogin","dispatch","useDispatch","active","setActive","connectWallet","WalletProvider","getWallet","auth","accountName","localStorage","setItem","onClick","tables","contracts","eosEndpoint","ethereum_address","require","updateSchema","newaddress","isAddress","initialUpdate","options","httpEndpoint","eos","EosApi","Eos","ethwalletConnected","setShow","regstloading","setRegisterLoading","updateloading","setUpdateLoading","regerrorMsg","setregerrorMsg","errorMsg","seterrorMsg","successMsg","setsuccessMsg","regsuccessMsg","setregsuccessMsg","ethaddress","setAddress","registerfee","setRegisterFee","registerSchema","initialRegister","useEffect","getTableRows","code","scope","table","json","requests","rows","length","registrationfee","fee","getfees","connectToWallet","disconnectWallet","clear","handleRegister","eosApi","transact","actions","account","authorization","actor","permission","data","to","quantity","memo","broadcast","blocksBehind","expireSeconds","message","handleUpdate","newethaddress","connectToMetamask","window","ethereum","request","method","accounts","setFieldValue","parseInt","EosTransaction","balances","setUserBalances","setSymbols","usdcfee","setUsdcFee","daifee","setDaiFee","loggedIn","getTokens","tokens","map","row","push","dtoken","getBalance","userbal","symbol","tokensData","limit","table_key","fetch","body","JSON","stringify","responses","tokensdata","balanceRow","find","balance","split","usdcreq","daireq","minfeewithdraw","getbal","handleTransfer","toAcc","toFixed","App","setLoggedIn","logged","walletType","getItem","initialState","ethReducer","action","userReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb7dcb9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { initAccessContext } from 'eos-transit'\nimport scatter from 'eos-transit-scatter-provider'\nimport AnchorLinkProvider from 'eos-transit-anchorlink-provider'\n// import { Api, JsonRpc } from 'eosjs';\n\nclass WalletProvider {\n\n    accessContext;\n    wallet;\n\n\n    constructor() {\n        this.accessContext = initAccessContext({\n            appName: 'bridge_app',\n            network: {\n                protocol: 'https',\n                host: 'api.main.alohaeos.com',\n                port: 443,\n                chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'\n            },\n            walletProviders: [\n                scatter(),\n                AnchorLinkProvider(Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15))\n            ]\n        })\n\n        this.wallet = undefined\n    }\n\n\n    async login(index) {\n        const walletProviders = this.accessContext.getWalletProviders()\n        const selectedProvider = walletProviders[index]\n        const wallet = this.accessContext.initWallet(selectedProvider)\n        this.wallet = wallet\n\n        await wallet.connect()\n        await wallet.login()\n    }\n\n    getWallet() {\n        return this.wallet\n    }\n\n    async disconnectWallet() {\n        if (!!this.wallet) {\n            await this.wallet.terminate()\n            this.wallet = undefined\n        }\n    }\n}\n\nexport default new WalletProvider()","export const login = ({ username }) => {\n    return {\n        type: 'LOGIN',\n        username\n    }\n}\n\nexport const Ethlogin = ({ address }) => {\n    return {\n        type: 'ETHLOGIN',\n        address\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}","export const tokenAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"_initialAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_tokenName\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimalUnits\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_tokenSymbol\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"allocateTo\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n        }],\n        \"name\": \"balanceOf\",\n        \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [{\n            \"internalType\": \"uint8\",\n            \"name\": \"\",\n            \"type\": \"uint8\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"\",\n            \"type\": \"uint256\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"src\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"dst\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n\nexport const bridgeAbi = [{\n        \"anonymous\": false,\n        \"inputs\": [{\n            \"indexed\": false,\n            \"internalType\": \"bytes\",\n            \"name\": \"reason\",\n            \"type\": \"bytes\"\n        }],\n        \"name\": \"Failure\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes\",\n                \"name\": \"reason\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"Receipt\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bytes\",\n                \"name\": \"reason\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"Refund\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"id\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"_message\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"pushInboundMessage\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\",\n        \"payable\": true\n    },\n    {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimGas\",\n        \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n        }],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\",\n        \"payable\": true\n    }\n]\nexport const usdcAddress = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\n\nexport const bridgeAddress = \"0x151982ebf8fbbb8979167b64b729f5f5c43562db\";\n\nexport const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";","import * as Web3 from \"web3\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  usdcAddress,\n  bridgeAbi,\n  bridgeAddress,\n  daiAddress,\n  tokenAbi,\n  // dappBrigeAbi,\n  // dappBrigeAddress,\n} from \"./abi\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst web3 = new Web3(Web3.givenProvider);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\n      \"lowAmount\",\n      `Should be greater than 0`,\n      (val) => parseFloat(val) > 0\n    ),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"USDC\",\n};\n\nconst usdcContract = new web3.eth.Contract(tokenAbi, usdcAddress);\nconst daiContract = new web3.eth.Contract(tokenAbi, daiAddress);\nconst brigeContract = new web3.eth.Contract(bridgeAbi, bridgeAddress);\n// const dappContract = new web3.eth.Contract(dappBrigeAbi, dappBrigeAddress);\n\nconst Ethereum = () => {\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const address = useSelector((state) => state.address.address);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const [loading, setLoading] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  const sendToken = async (stakeAMount, tokenId) => {\n    console.log(\"inside send token\");\n\n    brigeContract.methods\n      .sendToken(stakeAMount, tokenId)\n      .send({\n        from: address,\n      })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash  sendToken\", hash);\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"receipt sendToken\", receipt);\n\n        setLoading(false);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"confirmationNumber sendToken\", confirmationNumber);\n        console.log(\"receipt sendToken\", receipt);\n      })\n      .on(\"error\", (error) => {\n        console.log(\"error sendToken\", error);\n        setLoading(false);\n      });\n  };\n\n  const approveAndSendToken = async (stakeAMount, tokenId, token) => {\n    console.log(\"inside approve and send token\");\n\n    setLoading(true);\n\n    const contract = token === \"USDC\" ? usdcContract : daiContract;\n\n    let approvedAmount = \"\";\n\n    if (checked) {\n      approvedAmount =\n        token === \"USDC\"\n          ? web3.utils.toWei(\"10000000000000000\", \"mwei\")\n          : web3.utils.toWei(\"10000000000000000\", \"ether\");\n    } else {\n      approvedAmount = stakeAMount;\n    }\n\n    console.log(\"approved amount \", approvedAmount);\n\n    contract.methods\n      .approve(bridgeAddress, approvedAmount)\n      .send({\n        from: address,\n      })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash approve \", hash);\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"receipt approve\", receipt);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"confirmationNumber approve\", confirmationNumber);\n        console.log(\"receipt approve\", receipt);\n      })\n      .on(\"error\", (error) => {\n        console.log(\"error approve\", error);\n        setLoading(false);\n      })\n      .then(() => {\n        brigeContract.methods\n          .sendToken(stakeAMount, tokenId)\n          .send({\n            from: address,\n          })\n          .on(\"transactionHash\", (hash) => {\n            console.log(\"transactionHash  sendToken\", hash);\n          })\n          .on(\"receipt\", (receipt) => {\n            console.log(\"receipt sendToken\", receipt);\n\n            setLoading(false);\n          })\n          .on(\"confirmation\", (confirmationNumber, receipt) => {\n            console.log(\"confirmationNumber sendToken\", confirmationNumber);\n            console.log(\"receipt sendToken\", receipt);\n          })\n          .on(\"error\", (error) => {\n            console.log(\"error sendToken\", error);\n            setLoading(false);\n          });\n      });\n  };\n\n  const handleSubmit = async (values) => {\n    console.log(\"values \", values);\n\n    if (!address) {\n      alert(\"Please connect to metamask first\");\n      return;\n    }\n\n    const { value, token } = values;\n\n    console.log(\"value \", value);\n\n    const tokenId = token === \"USDC\" ? 0 : 1;\n\n    const contract = token === \"USDC\" ? usdcContract : daiContract;\n\n    const stakeAMount =\n      token === \"USDC\"\n        ? web3.utils.toWei(value, \"mwei\")\n        : web3.utils.toWei(value, \"ether\");\n\n    console.log(\"stakeAMount \", stakeAMount);\n\n    const approvedAmount = await contract.methods\n      .allowance(address, bridgeAddress)\n      .call();\n\n    console.log(\"approvedAmount in contract \", approvedAmount);\n\n    if (approvedAmount > stakeAMount) {\n      sendToken(stakeAMount, tokenId);\n    } else {\n      approveAndSendToken(stakeAMount, tokenId, token);\n    }\n    // }\n  };\n\n  console.log(\"checked \", checked);\n\n  return (\n    <div className=\"form-container\">\n      <div>3. Send Tokens Ethereum to EOS</div>\n      <div className=\"login\">\n        {/* <button onClick={connectToMetamask}>\n          {!!address ? \"Connected\" : \"Connect to metamask\"}\n        </button> */}\n\n        <div className=\"tokenform\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            <Form>\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  <option value=\"USDC\">USDC</option>\n                  <option value=\"DAI\">DAI</option>\n                  {/* <option value=\"DAPP\">DAPP</option> */}\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" />\n              </div>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={checked}\n                  onChange={() => setChecked(!checked)}\n                  disabled={loading}\n                />\n                <span>Infinite Approval</span>\n              </label>\n              <div>\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n\n      <a\n        href=\"https://docs.google.com/document/u/1/d/14K6_DT-pqmBsAd3tLoHD-SKhPO1WCFW7unMKTMzxKx4/edit?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Click here for help\n      </a>\n    </div>\n  );\n};\n\nexport default Ethereum;\n","const Modal = (props) => {\n\n    const { children, show } = props\n    console.log('propssssss----', props)\n    return (\n        <>\n        {show?\n        <div className=\"modalcontainer\">\n            {children}\n        </div>\n        :null\n        }\n        </>\n    )\n}\n\nexport default Modal","import * as React from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./logic/actions/actions\";\n\nconst { useState } = React;\n\nconst ConnectModal = (props) => {\n  const { closeModal, toggleLogin } = props;\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [active, setActive] = useState(-1);\n\n  const connectWallet = async (index) => {\n    try {\n      setActive(index);\n      setLoading(true);\n      await WalletProvider.login(index);\n      const wallet = WalletProvider.getWallet();\n      dispatch(login({ username: wallet?.auth?.accountName }));\n      toggleLogin(true)\n      localStorage.setItem(\"walletType\", index.toString());\n      console.log(\"wallet11-----\", wallet);\n      closeModal();\n\n    } catch (e) {\n      console.log(\"something went wrong \", e);\n      // dispatch(showNotification({ notificationText: 'Failed to connect', notificationType: 2 }))\n    } finally {\n      setLoading(false);\n      setActive(-1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n        Connect wallet\n        <div className=\"closeBtn\" onClick={closeModal}>\n          <p className=\"close-text\">close</p>\n        </div>\n      </div>\n      <div>\n        <button onClick={() => connectWallet(0)} disabled={loading}>\n          {loading && active === 0 ? \"connecting\" : \"Connect with scatter\"}\n        </button>\n      </div>\n      <div>\n        <button onClick={() => connectWallet(1)} disabled={loading}>\n          {loading && active === 1 ? \"connecting\" : \"Connect with Anchor\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectModal;\n","export const tables = {\n    Accounts: 'accounts',\n    Symbols: 'acceptedsym',\n    Configs: 'configset',\n    FEE_TAB: 'feesettings'\n}\nexport const contracts = {\n    BRIDGE_CON: 'dadusdbridge',\n    TokenContract: 'dadusdtokens'\n}\n\nexport const eosEndpoint = \"https://api.main.alohaeos.com\";","import { useState, useEffect } from \"react\";\nimport Modal from \"./modal\";\nimport ConnectModal from \"./wallets\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"./logic/actions/actions\";\nimport { Ethlogin } from \"./logic/actions/actions\";\n//@ts-ignore\nimport EosApi from \"eosjs-api\";\nimport { contracts, eosEndpoint, tables } from \"./config\";\nconst ethereum_address = require(\"ethereum-address\");\n\nconst updateSchema = Yup.object().shape({\n  newaddress: Yup.string()\n    .required(\"Enter new ethereum address\")\n    .test(\"ethereumaddress\", `Invalid ethereum address`, (address) =>\n      ethereum_address.isAddress(address)\n    ),\n});\n\nconst initialUpdate = {\n  newaddress: \"\",\n};\n\nconst options = {\n  httpEndpoint: eosEndpoint,\n};\nconst eos = EosApi(options);\n\nconst Eos = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [regstloading, setRegisterLoading] = useState(false);\n  const [updateloading, setUpdateLoading] = useState(false);\n  const [regerrorMsg, setregerrorMsg] = useState(\"\");\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n  const [regsuccessMsg, setregsuccessMsg] = useState(\"\");\n  const [ethaddress, setAddress] = useState(\"\");\n  const [registerfee, setRegisterFee] = useState(\"0.0000 EOS\");\n\n  const registerSchema = Yup.object().shape({\n    address: Yup.string()\n      .required(\"Enter ethereum address\")\n      .test(\"ethereumaddress\", `Invalid ethereum address`, (address) => {\n        return ethereum_address.isAddress(address);\n      }),\n  });\n\n  const initialRegister = {\n    address: ethaddress,\n  };\n\n  useEffect(() => {\n    const getfees = async () => {\n      const requests = await eos.getTableRows({\n        code: contracts.BRIDGE_CON,\n        scope: contracts.BRIDGE_CON,\n        table: tables.Configs,\n        json: \"true\",\n      });\n      if (requests.rows.length) {\n        const fee = await requests.rows[0].registrationfee;\n        setRegisterFee(fee);\n      }\n    };\n    getfees();\n  }, []);\n\n  const closeModal = () => {\n    setShow(false);\n  };\n\n  const connectToWallet = async () => {\n    if (walletConnected) {\n      try {\n        const wallet = WalletProvider.getWallet();\n        if (!!wallet) {\n          await WalletProvider.disconnectWallet();\n          dispatch(logout());\n          localStorage.clear();\n          props.toggleLogin(false);\n        }\n      } catch (e) {\n        console.log(\"something went wrong \", e);\n      }\n    } else {\n      setShow(true);\n    }\n  };\n\n  const handleRegister = async (values) => {\n    try {\n      setRegisterLoading(true);\n      const eosAmount = 1;\n      const wallet = WalletProvider.getWallet();\n      const { address } = values;\n      if (!walletConnected) {\n        setregerrorMsg(\"Eos wallet is not connected\");\n      }\n      if (!ethwalletConnected) {\n        setregerrorMsg(\"Ethereum wallet is not connected\");\n      }\n      if (!!wallet) {\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: \"eosio.token\",\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: contracts.BRIDGE_CON,\n                  quantity: registerfee,\n                  memo: \"registration fees\",\n                },\n              },\n              {\n                account: contracts.BRIDGE_CON,\n                name: \"registereth\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  account: wallet.auth.accountName,\n                  ethaddress: address,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setRegisterLoading(false);\n          setregsuccessMsg(\"Transaction Success\");\n          setregerrorMsg(\"\");\n        }\n      } else {\n        setRegisterLoading(false);\n      }\n    } catch (e) {\n      console.log(\"err----\", e);\n      setregerrorMsg(e.message);\n      setRegisterLoading(false);\n    } finally {\n      setRegisterLoading(false);\n    }\n  };\n\n  const handleUpdate = async (values) => {\n    try {\n      setUpdateLoading(true);\n      const eosAmount = 1;\n      const wallet = WalletProvider.getWallet();\n      const { newaddress } = values;\n      if (!walletConnected) {\n        seterrorMsg(\"Eos wallet is not connected\");\n      }\n      if (!ethwalletConnected) {\n        seterrorMsg(\"Ethereum wallet is not connected\");\n      }\n      if (!!wallet) {\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: \"eosio.token\",\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: contracts.BRIDGE_CON,\n                  quantity: registerfee,\n                  memo: \"modification fees\",\n                },\n              },\n              {\n                account: contracts.BRIDGE_CON,\n                name: \"modethadress\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  account: wallet.auth.accountName,\n                  newethaddress: newaddress,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setUpdateLoading(false);\n          setsuccessMsg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      } else {\n        setUpdateLoading(false);\n      }\n    } catch (e) {\n      seterrorMsg(e.message);\n      setUpdateLoading(false);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n\n  const connectToMetamask = async () => {\n    try {\n      const { ethereum } = window;\n      const { chainId } = ethereum;\n\n      if (chainId === \"0x1\") {\n        if (!!ethereum) {\n          const accounts = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n          setAddress(accounts[0]);\n          dispatch(Ethlogin({ address: accounts[0] }));\n        }\n      } else {\n        alert(\"Please select Ethereum Main Network (Mainnet) then connect\");\n      }\n    } catch (e) {\n      console.log(\"something went wrong \", e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"form-container\">\n        <div>1. Register Ethereum Address on EOS</div>\n        <div className=\"login\">\n          <button className=\"loginbtn\" onClick={connectToWallet}>\n            {walletConnected\n              ? `Logout From ${username}`\n              : \"Connect to Eos Wallet\"}\n          </button>\n          <button onClick={connectToMetamask}>\n            {!!ethaddress ? \"Connected\" : \"Connect to metamask\"}\n          </button>\n          <div className=\"register\">\n            <Formik\n              initialValues={initialRegister}\n              validationSchema={registerSchema}\n              onSubmit={handleRegister}\n            >\n              {({ setFieldValue }) => (\n                <Form>\n                  <div>\n                    <Field\n                      name=\"address\"\n                      placeholder=\"enter ethereum address\"\n                      onClick={() => setFieldValue(\"address\", ethaddress)}\n                    />\n                  </div>\n                  <div>\n                    <ErrorMessage name=\"address\" className=\"error\" />\n                  </div>\n                  <div>\n                    <div className=\"note\">\n                      Note:- Current registration fee {registerfee} will be\n                      deducted from your account.\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"sendbtn\"\n                      disabled={regstloading}\n                    >\n                      {regstloading ? \"registering\" : \"Register\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n        <a\n          href=\"https://docs.google.com/document/d/1peh47G369IqMjHkA3FptsODB5kRNN0DBSc17GNvzX1Q/edit?usp=sharing\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Click here for help\n        </a>\n        {regerrorMsg ? (\n          <div className=\"error\">{regerrorMsg}</div>\n        ) : (\n          <div className=\"success\">{regsuccessMsg}</div>\n        )}\n        {show ? (\n          <Modal show={show}>\n            <ConnectModal\n              closeModal={closeModal}\n              toggleLogin={props.toggleLogin}\n            />\n          </Modal>\n        ) : null}\n      </div>\n\n      <div className=\"form-container\">\n        <div>2. Modify Ethereum Address on EOS</div>\n        <div className=\"login\">\n          <div className=\"register\">\n            <Formik\n              initialValues={initialUpdate}\n              validationSchema={updateSchema}\n              onSubmit={handleUpdate}\n            >\n              {({ setFieldValue }) => (\n                <Form>\n                  <div>\n                    <Field\n                      name=\"newaddress\"\n                      placeholder=\"enter new ethereum address\"\n                      onClick={() => setFieldValue(\"newaddress\", ethaddress)}\n                    />\n                  </div>\n                  <div>\n                    <ErrorMessage name=\"newaddress\" className=\"error\" />\n                  </div>\n                  <div>\n                    <div className=\"note\">\n                      Note:- Current modification fee {registerfee} will be\n                      deducted from your account.\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"sendbtn\"\n                      disabled={updateloading}\n                    >\n                      {updateloading ? \"updating\" : \"Update Address\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n        {errorMsg ? (\n          <div className=\"error\">{errorMsg}</div>\n        ) : (\n          <div className=\"success\">{successMsg}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Eos;\n","import { useState, useEffect } from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n//@ts-ignore\nimport EosApi from \"eosjs-api\";\nimport { contracts, eosEndpoint, tables } from \"./config\";\n\nconst options = {\n  httpEndpoint: eosEndpoint,\n};\nconst eos = EosApi(options);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\"lowAmount\", `Should be greater than 0`, (val) => parseInt(val) > 0),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"6,EUSDC\",\n};\n\nconst EosTransaction = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const [balances, setUserBalances] = useState([]);\n  const [tokenSymbol, setSymbols] = useState([\"6,EUSDC\"]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n  const [usdcfee, setUsdcFee] = useState(\"0.0000 USDC\");\n  const [daifee, setDaiFee] = useState(\"0.0000 DAI\");\n\n  const { loggedIn } = props;\n  const getTokens = async () => {\n    let tokens = [];\n    const requests = await eos.getTableRows({\n      code: contracts.BRIDGE_CON,\n      scope: contracts.BRIDGE_CON,\n      table: tables.Symbols,\n      json: \"true\",\n    });\n    if (requests.rows.length) {\n      requests.rows.map((row) => {\n        tokens.push(row.dtoken.toString());\n      });\n    }\n    setSymbols(tokens);\n    return tokens;\n  };\n\n  const getBalance = async (tokens, account) => {\n    const userbal = [];\n    try {\n      if (tokens.length) {\n        for (const symbol of tokens) {\n          let code;\n          let toAcc;\n          // if (symbol == \"4,DAPP\") {\n          //   code = \"dappservices\";\n          // } else {\n          code = contracts.TokenContract;\n          // }\n          const tokensData = {\n            code: code,\n            json: true,\n            limit: 1000,\n            scope: account,\n            table: tables.Accounts,\n            table_key: account,\n          };\n          const responses = await fetch(\n            \"https://api.main.alohaeos.com/v1/chain/get_table_rows\",\n            {\n              method: \"post\",\n              body: JSON.stringify(tokensData),\n            }\n          );\n\n          const tokensdata = await responses.json();\n\n          if (tokensdata.rows.length) {\n            const balanceRow = tokensdata.rows.find(\n              (row) => row.balance.split(\" \")[1] == symbol.split(\",\")[1]\n            );\n            userbal.push(balanceRow.balance);\n          }\n        }\n        setUserBalances(userbal);\n      }\n    } catch (e) {\n      console.log(\"errr---\", e);\n      setUserBalances(userbal);\n    }\n  };\n\n  useEffect(() => {\n    const getfees = async () => {\n      const usdcreq = await eos.getTableRows({\n        code: contracts.BRIDGE_CON,\n        scope: \"USDC\",\n        table: tables.FEE_TAB,\n        json: \"true\",\n      });\n      const daireq = await eos.getTableRows({\n        code: contracts.BRIDGE_CON,\n        scope: \"DAI\",\n        table: tables.FEE_TAB,\n        json: \"true\",\n      });\n      if (usdcreq.rows.length) {\n        const fee = await usdcreq.rows[0].minfeewithdraw;\n        setUsdcFee(fee);\n      }\n      if (daireq.rows.length) {\n        const fee = await daireq.rows[0].minfeewithdraw;\n        setDaiFee(fee);\n      }\n    };\n    getfees();\n  }, []);\n\n  useEffect(() => {\n    getTokens();\n    const getbal = async () => {\n      const tokens = await getTokens();\n      if (walletConnected && tokens.length) {\n        await getBalance(tokens, username);\n      }\n    };\n    if (loggedIn) {\n      getbal();\n    }\n    if (!loggedIn) {\n      setUserBalances([]);\n    }\n  }, [loggedIn]);\n\n  const handleTransfer = async (values) => {\n    try {\n      const { value, token } = values;\n      const wallet = WalletProvider.getWallet();\n      if (!walletConnected) {\n        seterrorMsg(\"Eos wallet is not connected\");\n      } else if (!ethwalletConnected) {\n        seterrorMsg(\"Ethereum wallet is not connected\");\n      } else if (!!wallet) {\n        setLoading(true);\n        let account;\n        let toAcc;\n        // if (token == \"4,DAPP\") {\n        //   account = \"dappservices\";\n        //   toAcc = contracts.EthContract;\n        // } else {\n        account = contracts.TokenContract;\n        toAcc = contracts.BRIDGE_CON;\n        // }\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: account,\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: toAcc,\n                  quantity: `${parseInt(value).toFixed(\n                    parseInt(token.split(\",\")[0])\n                  )} ${token.split(\",\")[1]} `,\n                  memo: `Transfer ${token.split(\",\")[1]} token`,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setLoading(false);\n          setsuccessMsg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (e) {\n      seterrorMsg(e.message);\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div>4. Send Tokens EOS to Ethereum</div>\n      <div className=\"login\">\n        <div className=\"register\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleTransfer}\n          >\n            <Form>\n              {balances.map((balance) => (\n                <div className=\"userbalance\">{balance}</div>\n              ))}\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" className=\"error\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  {/* {tokenSymbol.map((sym) => (\n                    <option name=\"token\" value={sym}>\n                      {sym.split(\",\")[1]}\n                    </option>\n                  ))} */}\n                  <option value=\"6,USDC\">USDC</option>\n                  <option value=\"6,DAI\">DAI</option>\n                  {/* <option value=\"4,DAPP\">DAPP</option> */}\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" className=\"error\" />\n              </div>\n              <div className=\"notefee\">\n                Note: Current withdraw fee is {usdcfee} and {daifee} set\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"registerbtn\"\n                  disabled={loading}\n                >\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n      {errorMsg ? (\n        <div className=\"error\">{errorMsg}</div>\n      ) : (\n        <div className=\"success\">{successMsg}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EosTransaction;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport WalletProvider from \"./walletProvider\";\nimport { login } from \"./logic/actions/actions\";\nimport Ethereum from \"./ethComponent\";\nimport Eos from \"./eosComponent\";\nimport EosTransaction from \"./eostransaction\";\n\nconst { useEffect, useState } = React;\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const toggleLogin = (logged) => {\n    setLoggedIn(logged);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const connectWallet = async (walletType) => {\n      try {\n        await WalletProvider.login(walletType);\n        const wallet = WalletProvider.getWallet();\n\n        if (!!wallet) {\n          dispatch(login({ username: wallet?.auth?.accountName }));\n          toggleLogin(true);\n        }\n      } catch (e) {\n        console.log(\"something went wrong \", e);\n      }\n    };\n\n    const walletType = localStorage.getItem(\"walletType\");\n\n    if (!!walletType) {\n      let wallet = parseInt(walletType);\n\n      if (wallet >= 0) {\n        connectWallet(wallet);\n      }\n    }\n  }, []);\n\n  return (\n    <div>\n      <Eos toggleLogin={toggleLogin} />\n      <Ethereum />\n      <EosTransaction loggedIn={loggedIn} />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    ethWalletConnected: false,\n    address: '',\n}\n\nconst ethReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ETHLOGIN\":\n            return {\n                ...state,\n                ethWalletConnected: true,\n                address: action.address\n            }\n        default:\n            return state\n    }\n}\n\nexport default ethReducer","const initialState = {\n    walletConnected: false,\n    username: '',\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            return {\n                ...state,\n                walletConnected: true,\n                username: action.username\n            }\n\n        case \"LOGOUT\":\n            return {\n                ...state,\n                walletConnected: false,\n                username: ''\n            }\n\n            // case \"ETHLOGIN\":\n            //     return {\n            //         ...state,\n            //         ethWalletConnected: true,\n            //         username: action.username\n            //     }\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import { createStore, combineReducers } from 'redux'\nimport ethReducer from './eth.reducer'\nimport userReducer from './user.reducer'\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    address: ethReducer\n})\n\nconst store = createStore(rootReducer)\n\nexport default store","import store from './store'\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport store from './logic/reducers'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n   <React.StrictMode >\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}