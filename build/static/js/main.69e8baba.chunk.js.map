{"version":3,"sources":["reportWebVitals.js","walletProvider.js","logic/actions/actions.js","abi.js","ethComponent.js","modal.js","wallets.js","eosComponent.js","eostransaction.js","App.js","logic/reducers/eth.reducer.js","logic/reducers/user.reducer.js","logic/reducers/store.js","logic/reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","this","accessContext","initAccessContext","appName","network","protocol","host","port","chainId","walletProviders","scatter","AnchorLinkProvider","Math","random","toString","substring","wallet","undefined","index","getWalletProviders","selectedProvider","initWallet","connect","login","terminate","type","username","tokenAbi","inputs","internalType","name","payable","stateMutability","anonymous","indexed","constant","outputs","bridgeAddress","web3","Web3","schema","Yup","shape","value","required","test","val","parseFloat","token","initialValues","usdcContract","eth","Contract","daiContract","brigeContract","dappContract","Ethereum","useSelector","state","user","walletConnected","address","ethWalletConnected","useState","loading","setLoading","checked","setChecked","sendToken","stakeAMount","tokenId","a","console","log","methods","send","from","on","hash","receipt","confirmationNumber","error","approveAndSendToken","contract","approvedAmount","utils","toWei","approve","handleSubmit","values","alert","dappAmount","allowance","call","className","validationSchema","onSubmit","placeholder","as","onChange","disabled","href","target","rel","Modal","props","children","show","React","ConnectModal","closeModal","toggleLogin","dispatch","useDispatch","active","setActive","connectWallet","WalletProvider","getWallet","auth","accountName","localStorage","setItem","onClick","ethereum_address","require","updateSchema","newaddress","isAddress","initialUpdate","Eos","ethwalletConnected","setShow","regstloading","setRegisterLoading","updateloading","setUpdateLoading","regerrorMsg","setregerrorMsg","errorMsg","seterrorMsg","successMsg","setsuccessMsg","regsuccessMsg","setregsuccessMsg","ethaddress","setAddress","registerSchema","initialRegister","connectToWallet","disconnectWallet","clear","handleRegister","eosApi","transact","actions","account","authorization","actor","permission","data","to","quantity","toFixed","memo","broadcast","blocksBehind","expireSeconds","message","handleUpdate","newethaddress","connectToMetamask","window","ethereum","request","method","accounts","setFieldValue","eos","EosApi","httpEndpoint","parseInt","EosTransaction","balances","setUserBalances","setSymbols","loggedIn","getTokens","tokens","getTableRows","code","scope","table","json","requests","rows","length","map","row","push","dtoken","getBalance","userbal","symbol","tokensData","limit","split","table_key","fetch","body","JSON","stringify","responses","tokensdata","balance","useEffect","getbal","handleTransfer","toAcc","parse","App","setLoggedIn","logged","walletType","getItem","initialState","ethReducer","action","userReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AM,WAER,CACES,SAAS,EACTL,aAAc,QACdC,KAAM,SACNL,KAAM,UAGVK,KAAM,UACNL,KAAM,SAER,CACEQ,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,KACNL,KAAM,WAER,CACES,SAAS,EACTL,aAAc,UACdC,KAAM,YACNL,KAAM,WAER,CACES,SAAS,EACTL,aAAc,UACdC,KAAM,SACNL,KAAM,WAER,CACES,SAAS,EACTL,aAAc,QACdC,KAAM,SACNL,KAAM,UAGVK,KAAM,SACNL,KAAM,SAER,CACEG,OAAQ,CACN,CACEC,aAAc,YACdC,KAAM,UACNL,KAAM,aAER,CACEI,aAAc,UACdC,KAAM,WACNL,KAAM,WAER,CACEI,aAAc,UACdC,KAAM,kBACNL,KAAM,YAGVK,KAAM,kBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAER,CACEG,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,KACNL,KAAM,WAER,CACEI,aAAc,QACdC,KAAM,WACNL,KAAM,UAGVK,KAAM,qBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAER,CACEO,gBAAiB,UACjBP,KAAM,UACNM,SAAS,GAEX,CACEH,OAAQ,CACN,CACEC,aAAc,YACdC,KAAM,UACNL,KAAM,aAER,CACEI,aAAc,QACdC,KAAM,YACNL,KAAM,SAER,CACEI,aAAc,QACdC,KAAM,mBACNL,KAAM,SAER,CACEI,aAAc,YACdC,KAAM,mBACNL,KAAM,aAER,CACEI,aAAc,YACdC,KAAM,iBACNL,KAAM,aAER,CACEI,aAAc,YACdC,KAAM,sBACNL,KAAM,aAER,CACEI,aAAc,UACdC,KAAM,iBACNL,KAAM,WAER,CACEI,aAAc,YACdC,KAAM,0BACNL,KAAM,aAER,CACEI,aAAc,YACdC,KAAM,mBACNL,KAAM,aAER,CACEI,aAAc,YACdC,KAAM,oBACNL,KAAM,aAER,CACEI,aAAc,UACdC,KAAM,oBACNL,KAAM,YAGVK,KAAM,aACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAER,CACEG,OAAQ,CACN,CACEC,aAAc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","file":"static/js/main.69e8baba.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { initAccessContext } from 'eos-transit'\r\nimport scatter from 'eos-transit-scatter-provider'\r\nimport AnchorLinkProvider from 'eos-transit-anchorlink-provider'\r\n// import { Api, JsonRpc } from 'eosjs';\r\n\r\nclass WalletProvider {\r\n\r\n    accessContext;\r\n    wallet;\r\n\r\n\r\n    constructor() {\r\n        this.accessContext = initAccessContext({\r\n            appName: 'bridge_app',\r\n            network: {\r\n                protocol: 'https',\r\n                host: 'api.kylin.alohaeos.com',\r\n                port: 443,\r\n                chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'\r\n            },\r\n            walletProviders: [\r\n                scatter(),\r\n                AnchorLinkProvider(Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15))\r\n            ]\r\n        })\r\n\r\n        this.wallet = undefined\r\n    }\r\n\r\n\r\n    async login(index) {\r\n        const walletProviders = this.accessContext.getWalletProviders()\r\n        const selectedProvider = walletProviders[index]\r\n        const wallet = this.accessContext.initWallet(selectedProvider)\r\n        this.wallet = wallet\r\n\r\n        await wallet.connect()\r\n        await wallet.login()\r\n    }\r\n\r\n    getWallet(){\r\n        return this.wallet\r\n    }\r\n\r\n    async disconnectWallet() {\r\n        if (!!this.wallet) {\r\n            await this.wallet.terminate()\r\n            this.wallet = undefined\r\n        }\r\n    }\r\n}\r\n\r\nexport default new WalletProvider()","export const login = ({ username }) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        username\r\n    }\r\n}\r\n\r\nexport const Ethlogin = ({ address }) => {\r\n    return {\r\n        type: 'ETHLOGIN',\r\n        address\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}","export const tokenAbi = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_initialAmount\", type: \"uint256\" },\r\n      { internalType: \"string\", name: \"_tokenName\", type: \"string\" },\r\n      { internalType: \"uint8\", name: \"_decimalUnits\", type: \"uint8\" },\r\n      { internalType: \"string\", name: \"_tokenSymbol\", type: \"string\" },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n    ],\r\n    name: \"allocateTo\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: \"address\", name: \"\", type: \"address\" },\r\n      { internalType: \"address\", name: \"\", type: \"address\" },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: \"address\", name: \"src\", type: \"address\" },\r\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport const bridgeAbi = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"bytes\",\r\n        name: \"reason\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"Failure\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"recipient\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bytes\",\r\n        name: \"reason\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"Receipt\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"recipient\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bytes\",\r\n        name: \"reason\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"Refund\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address[]\",\r\n        name: \"_owners\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"required\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"required_secure\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"modifyConsensus\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"id\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"_message\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"pushInboundMessage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    stateMutability: \"payable\",\r\n    type: \"receive\",\r\n    payable: true,\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address[]\",\r\n        name: \"_owners\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        internalType: \"uint8\",\r\n        name: \"_required\",\r\n        type: \"uint8\",\r\n      },\r\n      {\r\n        internalType: \"uint8\",\r\n        name: \"_required_secure\",\r\n        type: \"uint8\",\r\n      },\r\n      {\r\n        internalType: \"address[]\",\r\n        name: \"_token_contracts\",\r\n        type: \"address[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"_EOS_precision\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"_ethereum_precision\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_uniswapRouter\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"_max_mint_period_amount\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"_max_mint_period\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"_max_mint_allowed\",\r\n        type: \"uint256[]\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_min_eth_required\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"sendToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"claimGas\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n    payable: true,\r\n  },\r\n];\r\n\r\nexport const dappBrigeAbi = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\r\n    ],\r\n    name: \"Failure\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"recipient\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\r\n    ],\r\n    name: \"Receipt\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: false, internalType: \"uint256\", name: \"id\", type: \"uint256\" },\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"recipient\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n      { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\r\n    ],\r\n    name: \"Refund\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"acceptTokenOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"available_batch_id\",\r\n    outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"available_message_id\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\r\n    name: \"batches\",\r\n    outputs: [\r\n      { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"message\", type: \"bytes\" },\r\n      { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\r\n      { internalType: \"bool\", name: \"received\", type: \"bool\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"changeLockByOwner\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"claimGas\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"configs\",\r\n    outputs: [\r\n      { internalType: \"uint256\", name: \"max_mint_allowed\", type: \"uint256\" },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"max_mint_period_amount\",\r\n        type: \"uint256\",\r\n      },\r\n      { internalType: \"uint256\", name: \"max_mint_period\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"EOS_precision\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"ethereum_precision\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"eosToEth\",\r\n    outputs: [\r\n      { internalType: \"contract EosToEthTokenpeg\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"executedMsg\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"gas_used\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint64\", name: \"batch_id\", type: \"uint64\" }],\r\n    name: \"getBatch\",\r\n    outputs: [\r\n      { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n      { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"bytes32\", name: \"\", type: \"bytes32\" },\r\n      { internalType: \"address\", name: \"\", type: \"address\" },\r\n    ],\r\n    name: \"hasConfirmed\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    name: \"inbound\",\r\n    outputs: [\r\n      { internalType: \"bytes\", name: \"message\", type: \"bytes\" },\r\n      { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address[]\", name: \"_owners\", type: \"address[]\" },\r\n      { internalType: \"uint8\", name: \"_required\", type: \"uint8\" },\r\n      { internalType: \"uint8\", name: \"_required_secure\", type: \"uint8\" },\r\n      { internalType: \"address\", name: \"_token_contract\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_uniswapRouter\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_eosToEth\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_EOS_precision\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ethereum_precision\", type: \"uint256\" },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_max_mint_period_amount\",\r\n        type: \"uint256\",\r\n      },\r\n      { internalType: \"uint256\", name: \"_max_mint_period\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_max_mint_allowed\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_min_eth_required\", type: \"uint256\" },\r\n    ],\r\n    name: \"initialize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"isOwner\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"last_incoming_batch_block_num\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"last_mint_time\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"last_outgoing_batch_block_num\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"locked\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"max_mint_period\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"max_mint_period_amount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"min_eth_required\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\r\n      { internalType: \"address[]\", name: \"_owners\", type: \"address[]\" },\r\n      { internalType: \"uint256\", name: \"required\", type: \"uint256\" },\r\n    ],\r\n    name: \"modifyConsensus\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"msg_types\",\r\n    outputs: [\r\n      { internalType: \"uint64\", name: \"address_registered\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"address_modified\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"mint\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"deposit\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"lock\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"max_mint\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"min_eth\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"low_eth\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"eth_received\", type: \"uint64\" },\r\n      { internalType: \"uint64\", name: \"swap\", type: \"uint64\" },\r\n      {\r\n        internalType: \"uint64\",\r\n        name: \"max_mint_period_amount\",\r\n        type: \"uint64\",\r\n      },\r\n      { internalType: \"uint64\", name: \"max_mint_period\", type: \"uint64\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"next_incoming_batch_id\",\r\n    outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"numOfConfirmed\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    name: \"outbound\",\r\n    outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_message\", type: \"bytes\" },\r\n    ],\r\n    name: \"pushInboundMessage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"required_sigs\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"required_sigs_secure\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address payable\", name: \"account\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"sendEther\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" }],\r\n    name: \"sendToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"token_contract\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"total_period_mint\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"uniswapRouter\",\r\n    outputs: [\r\n      { internalType: \"contract UniswapV2Router02\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const usdcAddress = \"0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C\";\r\n\r\nexport const bridgeAddress = \"0xAf11176d5D03d8587CDaF884c2f800AaE82C9aD2\";\r\n\r\nexport const daiAddress = \"0xaD6D458402F60fD3Bd25163575031ACDce07538D\";\r\n\r\nexport const dappBrigeAddress = \"0xA80bbbe16EfF95c94674D4DdD2410BF3365d5b14\";\r\n","import * as Web3 from \"web3\";\r\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  usdcAddress,\r\n  bridgeAbi,\r\n  bridgeAddress,\r\n  daiAddress,\r\n  tokenAbi,\r\n  dappBrigeAbi,\r\n  dappBrigeAddress,\r\n} from \"./abi\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\n\r\nconst schema = Yup.object().shape({\r\n  value: Yup.number()\r\n    .required(\"Enter value of token\")\r\n    .test(\r\n      \"lowAmount\",\r\n      `Should be greater than 0`,\r\n      (val) => parseFloat(val) > 0\r\n    ),\r\n  token: Yup.string().required(\"Select a token type\"),\r\n});\r\n\r\nconst initialValues = {\r\n  value: \"\",\r\n  token: \"USDC\",\r\n};\r\n\r\nconst usdcContract = new web3.eth.Contract(tokenAbi, usdcAddress);\r\nconst daiContract = new web3.eth.Contract(tokenAbi, daiAddress);\r\nconst brigeContract = new web3.eth.Contract(bridgeAbi, bridgeAddress);\r\nconst dappContract = new web3.eth.Contract(dappBrigeAbi, dappBrigeAddress);\r\n\r\nconst Ethereum = () => {\r\n  const walletConnected = useSelector((state) => state.user.walletConnected);\r\n  const address = useSelector((state) => state.address.address);\r\n  const ethwalletConnected = useSelector(\r\n    (state) => state.address.ethWalletConnected\r\n  );\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const sendToken = async (stakeAMount, tokenId) => {\r\n    console.log(\"inside send token\");\r\n\r\n    brigeContract.methods\r\n      .sendToken(stakeAMount, tokenId)\r\n      .send({\r\n        from: address,\r\n      })\r\n      .on(\"transactionHash\", (hash) => {\r\n        console.log(\"transactionHash  sendToken\", hash);\r\n      })\r\n      .on(\"receipt\", (receipt) => {\r\n        console.log(\"receipt sendToken\", receipt);\r\n\r\n        setLoading(false);\r\n      })\r\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\r\n        console.log(\"confirmationNumber sendToken\", confirmationNumber);\r\n        console.log(\"receipt sendToken\", receipt);\r\n      })\r\n      .on(\"error\", (error) => {\r\n        console.log(\"error sendToken\", error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const approveAndSendToken = async (stakeAMount, tokenId, token) => {\r\n    console.log(\"inside approve and send token\");\r\n\r\n    setLoading(true);\r\n\r\n    const contract = token === \"USDC\" ? usdcContract : daiContract;\r\n\r\n    let approvedAmount = \"\";\r\n\r\n    if (checked) {\r\n      approvedAmount =\r\n        token === \"USDC\"\r\n          ? web3.utils.toWei(\"10000000000000000\", \"mwei\")\r\n          : web3.utils.toWei(\"10000000000000000\", \"ether\");\r\n    } else {\r\n      approvedAmount = stakeAMount;\r\n    }\r\n\r\n    console.log(\"approved amount \", approvedAmount);\r\n\r\n    contract.methods\r\n      .approve(bridgeAddress, approvedAmount)\r\n      .send({\r\n        from: address,\r\n      })\r\n      .on(\"transactionHash\", (hash) => {\r\n        console.log(\"transactionHash approve \", hash);\r\n      })\r\n      .on(\"receipt\", (receipt) => {\r\n        console.log(\"receipt approve\", receipt);\r\n      })\r\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\r\n        console.log(\"confirmationNumber approve\", confirmationNumber);\r\n        console.log(\"receipt approve\", receipt);\r\n      })\r\n      .on(\"error\", (error) => {\r\n        console.log(\"error approve\", error);\r\n        setLoading(false);\r\n      })\r\n      .then(() => {\r\n        brigeContract.methods\r\n          .sendToken(stakeAMount, tokenId)\r\n          .send({\r\n            from: address,\r\n          })\r\n          .on(\"transactionHash\", (hash) => {\r\n            console.log(\"transactionHash  sendToken\", hash);\r\n          })\r\n          .on(\"receipt\", (receipt) => {\r\n            console.log(\"receipt sendToken\", receipt);\r\n\r\n            setLoading(false);\r\n          })\r\n          .on(\"confirmation\", (confirmationNumber, receipt) => {\r\n            console.log(\"confirmationNumber sendToken\", confirmationNumber);\r\n            console.log(\"receipt sendToken\", receipt);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(\"error sendToken\", error);\r\n            setLoading(false);\r\n          });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (values) => {\r\n    console.log(\"values \", values);\r\n\r\n    if (!address) {\r\n      alert(\"Please connect to metamask first\");\r\n      return;\r\n    }\r\n\r\n    const { value, token } = values;\r\n\r\n    console.log(\"value \", value);\r\n\r\n    if (token === \"DAPP\") {\r\n      const dappAmount = (parseFloat(value) * 1e4).toString();\r\n      setLoading(true);\r\n\r\n      dappContract.methods\r\n        .sendToken(dappAmount)\r\n        .send({\r\n          from: address,\r\n        })\r\n        .on(\"transactionHash\", (hash) => {\r\n          console.log(\"transactionHash  sendToken\", hash);\r\n        })\r\n        .on(\"receipt\", (receipt) => {\r\n          console.log(\"receipt sendToken\", receipt);\r\n\r\n          setLoading(false);\r\n        })\r\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\r\n          console.log(\"confirmationNumber sendToken\", confirmationNumber);\r\n          console.log(\"receipt sendToken\", receipt);\r\n        })\r\n        .on(\"error\", (error) => {\r\n          console.log(\"error sendToken\", error);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      const tokenId = token === \"USDC\" ? 0 : 1;\r\n\r\n      const contract = token === \"USDC\" ? usdcContract : daiContract;\r\n\r\n      const stakeAMount =\r\n        token === \"USDC\"\r\n          ? web3.utils.toWei(value, \"mwei\")\r\n          : web3.utils.toWei(value, \"ether\");\r\n\r\n      console.log(\"stakeAMount \", stakeAMount);\r\n\r\n      const approvedAmount = await contract.methods\r\n        .allowance(address, bridgeAddress)\r\n        .call();\r\n\r\n      console.log(\"approvedAmount in contract \", approvedAmount);\r\n\r\n      if (approvedAmount > stakeAMount) {\r\n        sendToken(stakeAMount, tokenId);\r\n      } else {\r\n        approveAndSendToken(stakeAMount, tokenId, token);\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log(\"checked \", checked);\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div>3. Send Tokens Ethereum to EOS</div>\r\n      <div className=\"login\">\r\n        {/* <button onClick={connectToMetamask}>\r\n          {!!address ? \"Connected\" : \"Connect to metamask\"}\r\n        </button> */}\r\n\r\n        <div className=\"tokenform\">\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={schema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Form>\r\n              <div>\r\n                <Field name=\"value\" placeholder=\"enter amount\" />\r\n              </div>\r\n              <div>\r\n                <ErrorMessage name=\"value\" />\r\n              </div>\r\n              <div>\r\n                <Field as=\"select\" name=\"token\">\r\n                  <option value=\"USDC\">USDC</option>\r\n                  <option value=\"DAI\">DAI</option>\r\n                  <option value=\"DAPP\">DAPP</option>\r\n                </Field>\r\n              </div>\r\n              <div>\r\n                <ErrorMessage name=\"token\" />\r\n              </div>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={checked}\r\n                  onChange={() => setChecked(!checked)}\r\n                  disabled={loading}\r\n                />\r\n                <span>Infinite Approval</span>\r\n              </label>\r\n              <div>\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                  {loading ? \"Sending Token\" : \"Send Token\"}\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n\r\n      <a\r\n        href=\"https://docs.google.com/document/u/1/d/14K6_DT-pqmBsAd3tLoHD-SKhPO1WCFW7unMKTMzxKx4/edit?usp=sharing\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        Click here for help\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ethereum;\r\n","const Modal = (props) => {\r\n\r\n    const { children, show } = props\r\n    console.log('propssssss----', props)\r\n    return (\r\n        <>\r\n        {show?\r\n        <div className=\"modalcontainer\">\r\n            {children}\r\n        </div>\r\n        :null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal","import * as React from \"react\";\r\nimport WalletProvider from \"./walletProvider\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./logic/actions/actions\";\r\n\r\nconst { useState } = React;\r\n\r\nconst ConnectModal = (props) => {\r\n  const { closeModal, toggleLogin } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [active, setActive] = useState(-1);\r\n\r\n  const connectWallet = async (index) => {\r\n    try {\r\n      setActive(index);\r\n      setLoading(true);\r\n      await WalletProvider.login(index);\r\n      const wallet = WalletProvider.getWallet();\r\n      dispatch(login({ username: wallet?.auth?.accountName }));\r\n      toggleLogin(true)\r\n      localStorage.setItem(\"walletType\", index.toString());\r\n      console.log(\"wallet11-----\", wallet);\r\n      closeModal();\r\n\r\n    } catch (e) {\r\n      console.log(\"something went wrong \", e);\r\n      // dispatch(showNotification({ notificationText: 'Failed to connect', notificationType: 2 }))\r\n    } finally {\r\n      setLoading(false);\r\n      setActive(-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        Connect wallet\r\n        <div className=\"closeBtn\" onClick={closeModal}>\r\n          <p className=\"close-text\">close</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button onClick={() => connectWallet(0)} disabled={loading}>\r\n          {loading && active === 0 ? \"connecting\" : \"Connect with scatter\"}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button onClick={() => connectWallet(1)} disabled={loading}>\r\n          {loading && active === 1 ? \"connecting\" : \"Connect with Anchor\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport ConnectModal from \"./wallets\";\r\nimport WalletProvider from \"./walletProvider\";\r\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"./logic/actions/actions\";\r\nimport { Ethlogin } from \"./logic/actions/actions\";\r\nconst ethereum_address = require(\"ethereum-address\");\r\n\r\nconst updateSchema = Yup.object().shape({\r\n  newaddress: Yup.string()\r\n    .required(\"Enter new ethereum address\")\r\n    .test(\"ethereumaddress\", `Invalid ethereum address`, (address) =>\r\n      ethereum_address.isAddress(address)\r\n    ),\r\n});\r\n\r\nconst initialUpdate = {\r\n  newaddress: \"\",\r\n};\r\n\r\nconst Eos = (props) => {\r\n  const username = useSelector((state) => state.user.username);\r\n  const walletConnected = useSelector((state) => state.user.walletConnected);\r\n  const ethwalletConnected = useSelector(\r\n    (state) => state.address.ethWalletConnected\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [regstloading, setRegisterLoading] = useState(false);\r\n  const [updateloading, setUpdateLoading] = useState(false);\r\n  const [regerrorMsg, setregerrorMsg] = useState(\"\");\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n  const [successMsg, setsuccessMsg] = useState(\"\");\r\n  const [regsuccessMsg, setregsuccessMsg] = useState(\"\");\r\n  const [ethaddress, setAddress] = useState(\"\");\r\n\r\n  const registerSchema = Yup.object().shape({\r\n    address: Yup.string()\r\n      .required(\"Enter ethereum address\")\r\n      .test(\"ethereumaddress\", `Invalid ethereum address`, (address) => {\r\n        console.log(\"addddddddddd----\", address);\r\n        return ethereum_address.isAddress(address);\r\n      }),\r\n  });\r\n\r\n  const initialRegister = {\r\n    address: ethaddress,\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const connectToWallet = async () => {\r\n    if (walletConnected) {\r\n      try {\r\n        const wallet = WalletProvider.getWallet();\r\n        if (!!wallet) {\r\n          await WalletProvider.disconnectWallet();\r\n          dispatch(logout());\r\n          localStorage.clear();\r\n          props.toggleLogin(false);\r\n        }\r\n      } catch (e) {\r\n        console.log(\"something went wrong \", e);\r\n      }\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (values) => {\r\n    try {\r\n      setRegisterLoading(true);\r\n      const eosAmount = 1;\r\n      const wallet = WalletProvider.getWallet();\r\n      const { address } = values;\r\n      console.log(\"address----\", values);\r\n      if (!walletConnected) {\r\n        setregerrorMsg(\"Eos wallet is not connected\");\r\n      }\r\n      if (!ethwalletConnected) {\r\n        setregerrorMsg(\"Ethereum wallet is not connected\");\r\n      }\r\n      if (!!wallet) {\r\n        const result = await wallet.eosApi.transact(\r\n          {\r\n            actions: [\r\n              {\r\n                account: \"eosio.token\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: wallet.auth.accountName,\r\n                    permission: wallet.auth.permission,\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: wallet.auth.accountName,\r\n                  to: \"etheosmultok\",\r\n                  quantity: `${eosAmount.toFixed(4)} EOS`,\r\n                  memo: \"registration fees\",\r\n                },\r\n              },\r\n              {\r\n                account: \"etheosmultok\",\r\n                name: \"registereth\",\r\n                authorization: [\r\n                  {\r\n                    actor: wallet.auth.accountName,\r\n                    permission: wallet.auth.permission,\r\n                  },\r\n                ],\r\n                data: {\r\n                  account: wallet.auth.accountName,\r\n                  ethaddress: address,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            broadcast: true,\r\n            blocksBehind: 3,\r\n            expireSeconds: 60,\r\n          }\r\n        );\r\n        if (result) {\r\n          setRegisterLoading(false);\r\n          setregsuccessMsg(\"Transaction Success\");\r\n          setregerrorMsg(\"\");\r\n        }\r\n      } else {\r\n        setRegisterLoading(false);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"err----\", e);\r\n      setregerrorMsg(e.message);\r\n      setRegisterLoading(false);\r\n    } finally {\r\n      setRegisterLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (values) => {\r\n    try {\r\n      setUpdateLoading(true);\r\n      const eosAmount = 1;\r\n      const wallet = WalletProvider.getWallet();\r\n      const { newaddress } = values;\r\n      console.log(\"address----\", newaddress);\r\n      if (!walletConnected) {\r\n        seterrorMsg(\"Eos wallet is not connected\");\r\n      }\r\n      if (!ethwalletConnected) {\r\n        seterrorMsg(\"Ethereum wallet is not connected\");\r\n      }\r\n      if (!!wallet) {\r\n        const result = await wallet.eosApi.transact(\r\n          {\r\n            actions: [\r\n              {\r\n                account: \"eosio.token\",\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: wallet.auth.accountName,\r\n                    permission: wallet.auth.permission,\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: wallet.auth.accountName,\r\n                  to: \"etheosmultok\",\r\n                  quantity: `${eosAmount.toFixed(4)} EOS`,\r\n                  memo: \"modification fees\",\r\n                },\r\n              },\r\n              {\r\n                account: \"etheosmultok\",\r\n                name: \"modethadress\",\r\n                authorization: [\r\n                  {\r\n                    actor: wallet.auth.accountName,\r\n                    permission: wallet.auth.permission,\r\n                  },\r\n                ],\r\n                data: {\r\n                  account: wallet.auth.accountName,\r\n                  newethaddress: newaddress,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            broadcast: true,\r\n            blocksBehind: 3,\r\n            expireSeconds: 60,\r\n          }\r\n        );\r\n        if (result) {\r\n          setUpdateLoading(false);\r\n          setsuccessMsg(\"Transaction Success\");\r\n          seterrorMsg(\"\");\r\n        }\r\n      } else {\r\n        setUpdateLoading(false);\r\n      }\r\n    } catch (e) {\r\n      seterrorMsg(e.message);\r\n      setUpdateLoading(false);\r\n    } finally {\r\n      setUpdateLoading(false);\r\n    }\r\n  };\r\n\r\n  const connectToMetamask = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n      const { chainId } = ethereum;\r\n\r\n      if (chainId === \"0x3\") {\r\n        if (!!ethereum) {\r\n          const accounts = await ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          setAddress(accounts[0]);\r\n          dispatch(Ethlogin({ address: accounts[0] }));\r\n        }\r\n      } else {\r\n        alert(\"Please select Ropsten test network then connect\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"something went wrong \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-container\">\r\n        <div>1. Register Ethereum Address on EOS</div>\r\n        <div className=\"login\">\r\n          <button className=\"loginbtn\" onClick={connectToWallet}>\r\n            {walletConnected\r\n              ? `Logout From ${username}`\r\n              : \"Connect to Eos Wallet\"}\r\n          </button>\r\n          <button onClick={connectToMetamask}>\r\n            {!!ethaddress ? \"Connected\" : \"Connect to metamask\"}\r\n          </button>\r\n          <div className=\"register\">\r\n            <Formik\r\n              initialValues={initialRegister}\r\n              validationSchema={registerSchema}\r\n              onSubmit={handleRegister}\r\n            >\r\n              {({ setFieldValue }) => (\r\n                <Form>\r\n                  <div>\r\n                    <Field\r\n                      name=\"address\"\r\n                      placeholder=\"enter ethereum address\"\r\n                      onClick={() => setFieldValue(\"address\", ethaddress)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <ErrorMessage name=\"address\" className=\"error\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"note\">\r\n                      Note:- 1 EOS will be charged for registration fees.\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"sendbtn\"\r\n                      disabled={regstloading}\r\n                    >\r\n                      {regstloading ? \"registering\" : \"Register\"}\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n        <a\r\n          href=\"https://docs.google.com/document/d/1peh47G369IqMjHkA3FptsODB5kRNN0DBSc17GNvzX1Q/edit?usp=sharing\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Click here for help\r\n        </a>\r\n        {regerrorMsg ? (\r\n          <div className=\"error\">{regerrorMsg}</div>\r\n        ) : (\r\n          <div className=\"success\">{regsuccessMsg}</div>\r\n        )}\r\n        {show ? (\r\n          <Modal show={show}>\r\n            <ConnectModal\r\n              closeModal={closeModal}\r\n              toggleLogin={props.toggleLogin}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"form-container\">\r\n        <div>2. Modify Ethereum Address on EOS</div>\r\n        <div className=\"login\">\r\n          <div className=\"register\">\r\n            <Formik\r\n              initialValues={initialUpdate}\r\n              validationSchema={updateSchema}\r\n              onSubmit={handleUpdate}\r\n            >\r\n              {({ setFieldValue }) => (\r\n                <Form>\r\n                  <div>\r\n                    <Field\r\n                      name=\"newaddress\"\r\n                      placeholder=\"enter new ethereum address\"\r\n                      onClick={() => setFieldValue(\"newaddress\", ethaddress)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <ErrorMessage name=\"newaddress\" className=\"error\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"note\">\r\n                      Note:- 1 EOS will be charged for modification fees.\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"sendbtn\"\r\n                      disabled={updateloading}\r\n                    >\r\n                      {updateloading ? \"updating\" : \"Update Address\"}\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n        {errorMsg ? (\r\n          <div className=\"error\">{errorMsg}</div>\r\n        ) : (\r\n          <div className=\"success\">{successMsg}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Eos;\r\n","import { useState, useEffect } from \"react\";\r\nimport WalletProvider from \"./walletProvider\";\r\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n//@ts-ignore\r\nimport EosApi from \"eosjs-api\";\r\n\r\nconst options = {\r\n  httpEndpoint: \"https://api.kylin.alohaeos.com\",\r\n};\r\nconst eos = EosApi(options);\r\n\r\nconst schema = Yup.object().shape({\r\n  value: Yup.number()\r\n    .required(\"Enter value of token\")\r\n    .test(\"lowAmount\", `Should be greater than 0`, (val) => parseInt(val) > 0),\r\n  token: Yup.string().required(\"Select a token type\"),\r\n});\r\n\r\nconst initialValues = {\r\n  value: \"\",\r\n  token: \"6,EUSDC\",\r\n};\r\n\r\nconst EosTransaction = (props) => {\r\n  const username = useSelector((state) => state.user.username);\r\n  const walletConnected = useSelector((state) => state.user.walletConnected);\r\n  const ethwalletConnected = useSelector(\r\n    (state) => state.address.ethWalletConnected\r\n  );\r\n  const [balances, setUserBalances] = useState([]);\r\n  const [tokenSymbol, setSymbols] = useState([\"6,EUSDC\"]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n  const [successMsg, setsuccessMsg] = useState(\"\");\r\n\r\n  const { loggedIn } = props;\r\n  const getTokens = async () => {\r\n    let tokens = [];\r\n    const requests = await eos.getTableRows({\r\n      code: \"etheosmultok\",\r\n      scope: \"etheosmultok\",\r\n      table: \"acceptedsym1\",\r\n      json: \"true\",\r\n    });\r\n    if (requests.rows.length) {\r\n      requests.rows.map((row) => {\r\n        tokens.push(row.dtoken.toString());\r\n      });\r\n    }\r\n    console.log(\"tokesn----\", tokens);\r\n    setSymbols(tokens);\r\n    return tokens;\r\n  };\r\n\r\n  const getBalance = async (tokens, account) => {\r\n    const userbal = [];\r\n    try {\r\n      if (tokens.length) {\r\n        console.log(\"username----\", account);\r\n        for (const symbol of tokens) {\r\n          const tokensData = {\r\n            code: \"etheosmultok\",\r\n            json: true,\r\n            limit: 1000,\r\n            scope: symbol.split(\",\")[1],\r\n            table: \"available\",\r\n            table_key: account,\r\n          };\r\n          const responses = await fetch(\r\n            \"https://api.kylin.alohaeos.com/v1/chain/get_table_rows\",\r\n            {\r\n              method: \"post\",\r\n              body: JSON.stringify(tokensData),\r\n            }\r\n          );\r\n\r\n          const tokensdata = await responses.json();\r\n          console.log(\"respose----\", tokensdata);\r\n          if (tokensdata.rows.length) {\r\n            tokensdata.rows.map((row) => {\r\n              if (row.account == account) {\r\n                userbal.push(tokensdata.rows[0].balance);\r\n              }\r\n            });\r\n          }\r\n        }\r\n        console.log(\"userbalance ---\", userbal);\r\n        setUserBalances(userbal);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"errr---\", e);\r\n      setUserBalances(userbal);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTokens();\r\n    const getbal = async () => {\r\n      const tokens = await getTokens();\r\n      if (walletConnected && tokens.length) {\r\n        await getBalance(tokens, username);\r\n      }\r\n    };\r\n    if (loggedIn) {\r\n      getbal();\r\n    }\r\n    if (!loggedIn) {\r\n      setUserBalances([]);\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const handleTransfer = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      const { value, token } = values;\r\n      const wallet = WalletProvider.getWallet();\r\n      if (!walletConnected) {\r\n        seterrorMsg(\"Eos wallet is not connected\");\r\n      }\r\n      if (!ethwalletConnected) {\r\n        seterrorMsg(\"Ethereum wallet is not connected\");\r\n      }\r\n      if (!!wallet) {\r\n        let account;\r\n        let toAcc ;\r\n        if(token == '4,DAPP'){\r\n          account= 'dappservices'\r\n          toAcc = 'ethdappdepo1'\r\n        }else{\r\n          account=\"ddadlptoken1\"\r\n          toAcc = 'etheosmultok'\r\n        }\r\n        const result = await wallet.eosApi.transact(\r\n          {\r\n            actions: [\r\n              {\r\n                account: account,\r\n                name: \"transfer\",\r\n                authorization: [\r\n                  {\r\n                    actor: wallet.auth.accountName,\r\n                    permission: wallet.auth.permission,\r\n                  },\r\n                ],\r\n                data: {\r\n                  from: wallet.auth.accountName,\r\n                  to: toAcc,\r\n                  quantity: `${parseInt(value).toFixed(\r\n                    parseInt(token.split(\",\")[0])\r\n                  )} ${token.split(\",\")[1]} `,\r\n                  memo: `Transfer ${token.split(\",\")[1]} token`,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            broadcast: true,\r\n            blocksBehind: 3,\r\n            expireSeconds: 60,\r\n          }\r\n        );\r\n        if (result) {\r\n          setLoading(false);\r\n          setsuccessMsg(\"Transaction Success\");\r\n          seterrorMsg(\"\");\r\n        }\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error in treansferinng----\", JSON.parse(JSON.stringify(e)));\r\n      seterrorMsg(e.message);\r\n      setLoading(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div>4. Send Tokens EOS to Ethereum</div>\r\n      <div className=\"login\">\r\n        <div className=\"register\">\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={schema}\r\n            onSubmit={handleTransfer}\r\n          >\r\n            <Form>\r\n              {balances.map((balance) => (\r\n                <div className=\"userbalance\">{balance}</div>\r\n              ))}\r\n              <div>\r\n                <Field name=\"value\" placeholder=\"enter amount\" />\r\n              </div>\r\n              <div>\r\n                <ErrorMessage name=\"value\" className=\"error\" />\r\n              </div>\r\n              <div>\r\n                <Field as=\"select\" name=\"token\">\r\n                  {/* {tokenSymbol.map((sym) => (\r\n                    <option name=\"token\" value={sym}>\r\n                      {sym.split(\",\")[1]}\r\n                    </option>\r\n                  ))} */}\r\n                  <option value=\"6,EUSDC\">EUSDC</option>\r\n                  <option value=\"6,DAI\">DAI</option>\r\n                  <option value=\"4,DAPP\">DAPP</option>\r\n                </Field>\r\n              </div>\r\n              <div>\r\n                <ErrorMessage name=\"token\" className=\"error\" />\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"registerbtn\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? \"Sending Token\" : \"Send Token\"}\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {errorMsg ? (\r\n        <div className=\"error\">{errorMsg}</div>\r\n      ) : (\r\n        <div className=\"success\">{successMsg}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EosTransaction;\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport WalletProvider from \"./walletProvider\";\r\nimport { login } from \"./logic/actions/actions\";\r\nimport Ethereum from \"./ethComponent\";\r\nimport Eos from \"./eosComponent\";\r\nimport EosTransaction from \"./eostransaction\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const toggleLogin = (logged) => {\r\n    setLoggedIn(logged);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const connectWallet = async (walletType) => {\r\n      try {\r\n        await WalletProvider.login(walletType);\r\n        const wallet = WalletProvider.getWallet();\r\n\r\n        if (!!wallet) {\r\n          dispatch(login({ username: wallet?.auth?.accountName }));\r\n          toggleLogin(true);\r\n        }\r\n      } catch (e) {\r\n        console.log(\"something went wrong \", e);\r\n      }\r\n    };\r\n\r\n    const walletType = localStorage.getItem(\"walletType\");\r\n\r\n    if (!!walletType) {\r\n      let wallet = parseInt(walletType);\r\n\r\n      if (wallet >= 0) {\r\n        connectWallet(wallet);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Eos toggleLogin={toggleLogin} />\r\n      <Ethereum />\r\n      <EosTransaction loggedIn={loggedIn} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    ethWalletConnected: false,\r\n    address: '',\r\n}\r\n\r\nconst ethReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ETHLOGIN\":\r\n            return {\r\n                ...state,\r\n                ethWalletConnected: true,\r\n                address: action.address\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ethReducer","const initialState = {\r\n    walletConnected: false,\r\n    username: '',\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                walletConnected: true,\r\n                username: action.username\r\n            }\r\n\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                walletConnected: false,\r\n                username: ''\r\n            }\r\n\r\n            // case \"ETHLOGIN\":\r\n            //     return {\r\n            //         ...state,\r\n            //         ethWalletConnected: true,\r\n            //         username: action.username\r\n            //     }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import { createStore, combineReducers } from 'redux'\r\nimport ethReducer from './eth.reducer'\r\nimport userReducer from './user.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    address: ethReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import store from './store'\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App'\r\nimport store from './logic/reducers'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n   <React.StrictMode >\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}