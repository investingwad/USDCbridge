{"version":3,"sources":["reportWebVitals.js","walletProvider.js","logic/actions/actions.js","abi.js","ethComponent.js","modal.js","wallets.js","eosComponent.js","eostransaction.js","App.js","logic/reducers/eth.reducer.js","logic/reducers/user.reducer.js","logic/reducers/store.js","logic/reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","this","accessContext","initAccessContext","appName","network","protocol","host","port","chainId","walletProviders","scatter","AnchorLinkProvider","Math","random","toString","substring","wallet","undefined","index","getWalletProviders","selectedProvider","initWallet","connect","login","terminate","type","username","tokenAbi","inputs","internalType","name","payable","stateMutability","anonymous","indexed","constant","outputs","bridgeAddress","web3","Web3","schema","Yup","shape","value","required","test","val","parseFloat","token","initialValues","usdcContract","eth","Contract","daiContract","brigeContract","dappContract","Ethereum","useSelector","state","user","walletConnected","address","ethWalletConnected","useState","loading","setLoading","checked","setChecked","sendToken","stakeAMount","tokenId","a","console","log","methods","send","from","on","hash","receipt","confirmationNumber","error","approveAndSendToken","contract","approvedAmount","utils","toWei","approve","handleSubmit","values","alert","dappAmount","allowance","call","className","validationSchema","onSubmit","placeholder","as","onChange","disabled","href","target","rel","Modal","props","children","show","React","ConnectModal","closeModal","toggleLogin","dispatch","useDispatch","active","setActive","connectWallet","WalletProvider","getWallet","auth","accountName","localStorage","setItem","onClick","ethereum_address","require","updateSchema","newaddress","isAddress","initialUpdate","Eos","ethwalletConnected","setShow","regstloading","setRegisterLoading","updateloading","setUpdateLoading","regerrorMsg","setregerrorMsg","errorMsg","seterrorMsg","successMsg","setsuccessMsg","regsuccessMsg","setregsuccessMsg","ethaddress","setAddress","registerSchema","initialRegister","connectToWallet","disconnectWallet","clear","handleRegister","eosApi","transact","actions","account","authorization","actor","permission","data","to","quantity","toFixed","memo","broadcast","blocksBehind","expireSeconds","message","handleUpdate","newethaddress","connectToMetamask","window","ethereum","request","method","accounts","setFieldValue","eos","EosApi","httpEndpoint","parseInt","EosTransaction","balances","setUserBalances","setSymbols","loggedIn","getTokens","tokens","getTableRows","code","scope","table","json","requests","rows","length","map","row","push","dtoken","getBalance","userbal","symbol","tokensData","limit","split","table_key","fetch","body","JSON","stringify","responses","tokensdata","balance","useEffect","getbal","handleTransfer","toAcc","parse","App","setLoggedIn","logged","walletType","getItem","initialState","ethReducer","action","userReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sZAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kGC6CC,M,WAzCX,aAAe,oBACXQ,KAAKC,cAAgBC,4BAAkB,CACnCC,QAAS,aACTC,QAAS,CACLC,SAAU,QACVC,KAAM,yBACNC,KAAM,IACNC,QAAS,oEAEbC,gBAAiB,CACbC,MACAC,IAAmBC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,QAIjHf,KAAKgB,YAASC,E,2FAINC,G,kFACFT,EAAkBT,KAAKC,cAAckB,qBACrCC,EAAmBX,EAAgBS,GACnCF,EAAShB,KAAKC,cAAcoB,WAAWD,GAC7CpB,KAAKgB,OAASA,E,SAERA,EAAOM,U,uBACPN,EAAOO,Q,yIAIb,OAAOvB,KAAKgB,S,uJAINhB,KAAKgB,O,gCACDhB,KAAKgB,OAAOQ,Y,OAClBxB,KAAKgB,YAASC,E,8GC/CbM,EAAQ,SAAC,GAClB,MAAO,CACHE,KAAM,QACNC,SAH+B,EAAfA,W,yBCAXC,EAAW,CAAC,CACjBC,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,iBAAkBL,KAAM,WACzD,CAAEI,aAAc,SAAUC,KAAM,aAAcL,KAAM,UACpD,CAAEI,aAAc,QAASC,KAAM,gBAAiBL,KAAM,SACtD,CAAEI,aAAc,SAAUC,KAAM,eAAgBL,KAAM,WAE1DM,SAAS,EACTC,gBAAiB,aACjBP,KAAM,eAEV,CACIQ,WAAW,EACXL,OAAQ,CAAC,CACDM,SAAS,EACTL,aAAc,UACdC,KAAM,QACNL,KAAM,WAEV,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,UACNL,KAAM,WAEV,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,QACNL,KAAM,YAGdK,KAAM,WACNL,KAAM,SAEV,CACIQ,WAAW,EACXL,OAAQ,CACJ,CAAEM,SAAS,EAAML,aAAc,UAAWC,KAAM,OAAQL,KAAM,WAC9D,CAAES,SAAS,EAAML,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC5D,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,QACNL,KAAM,YAGdK,KAAM,WACNL,KAAM,SAEV,CACIU,UAAU,EACVP,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,SAAUL,KAAM,WACjD,CAAEI,aAAc,UAAWC,KAAM,QAASL,KAAM,YAEpDK,KAAM,aACNM,QAAS,GACTL,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,WAC3C,CAAEI,aAAc,UAAWC,KAAM,GAAIL,KAAM,YAE/CK,KAAM,YACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,WAAYL,KAAM,WACnD,CAAEI,aAAc,UAAWC,KAAM,SAAUL,KAAM,YAErDK,KAAM,UACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDM,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,YACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,GACRE,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,QAASC,KAAM,GAAIL,KAAM,UACnDM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,GACRE,KAAM,OACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,GACRE,KAAM,SACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,GACRE,KAAM,cACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,MAAOL,KAAM,WAC9C,CAAEI,aAAc,UAAWC,KAAM,SAAUL,KAAM,YAErDK,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDM,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAEV,CACIU,UAAU,EACVP,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,MAAOL,KAAM,WAC9C,CAAEI,aAAc,UAAWC,KAAM,MAAOL,KAAM,WAC9C,CAAEI,aAAc,UAAWC,KAAM,SAAUL,KAAM,YAErDK,KAAM,eACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDM,SAAS,EACTC,gBAAiB,aACjBP,KAAM,aA0yBDY,EAAgB,6CCr7BvBC,EAAO,IAAIC,EAAKA,iBAEhBC,EAASC,MAAaC,MAAM,CAChCC,MAAOF,MACJG,SAAS,wBACTC,KACC,YAHG,4BAKH,SAACC,GAAD,OAASC,WAAWD,GAAO,KAE/BE,MAAOP,MAAaG,SAAS,yBAGzBK,EAAgB,CACpBN,MAAO,GACPK,MAAO,QAGHE,EAAe,IAAIZ,EAAKa,IAAIC,SAASzB,EDi6BhB,8CCh6BrB0B,EAAc,IAAIf,EAAKa,IAAIC,SAASzB,EDo6BhB,8CCn6BpB2B,EAAgB,IAAIhB,EAAKa,IAAIC,SD2HV,CAAC,CAClBnB,WAAW,EACXL,OAAQ,CACJ,CAAEM,SAAS,EAAOL,aAAc,QAASC,KAAM,SAAUL,KAAM,UAEnEK,KAAM,UACNL,KAAM,SAEV,CACIQ,WAAW,EACXL,OAAQ,CAAC,CACDM,SAAS,EACTL,aAAc,UACdC,KAAM,YACNL,KAAM,WAEV,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,SACNL,KAAM,WAEV,CAAES,SAAS,EAAOL,aAAc,QAASC,KAAM,SAAUL,KAAM,UAEnEK,KAAM,UACNL,KAAM,SAEV,CACIQ,WAAW,EACXL,OAAQ,CACJ,CAAEM,SAAS,EAAOL,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7D,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,YACNL,KAAM,WAEV,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,SACNL,KAAM,WAEV,CAAES,SAAS,EAAOL,aAAc,QAASC,KAAM,SAAUL,KAAM,UAEnEK,KAAM,SACNL,KAAM,SAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,UAAWL,KAAM,YAC3DK,KAAM,uBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,aACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,iBAAkBL,KAAM,WACzD,CACII,aAAc,UACdC,KAAM,0BACNL,KAAM,WAEV,CAAEI,aAAc,UAAWC,KAAM,mBAAoBL,KAAM,WAC3D,CAAEI,aAAc,UAAWC,KAAM,oBAAqBL,KAAM,WAC5D,CAAEI,aAAc,UAAWC,KAAM,iBAAkBL,KAAM,WACzD,CAAEI,aAAc,UAAWC,KAAM,sBAAuBL,KAAM,YAElEK,KAAM,cACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,UAAWL,KAAM,YAC3DK,KAAM,WACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,UAAWL,KAAM,WAClD,CAAEI,aAAc,UAAWC,KAAM,SAAUL,KAAM,WACjD,CAAEI,aAAc,UAAWC,KAAM,UAAWL,KAAM,YAEtDK,KAAM,qBACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,qBACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,uBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACnDK,KAAM,UACNM,QAAS,CACL,CAAEP,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,QAASC,KAAM,UAAWL,KAAM,SAChD,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,WACpD,CAAEI,aAAc,OAAQC,KAAM,WAAYL,KAAM,SAEpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,oBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,UACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,UACNM,QAAS,CACL,CAAEP,aAAc,UAAWC,KAAM,mBAAoBL,KAAM,WAC3D,CACII,aAAc,UACdC,KAAM,yBACNL,KAAM,WAEV,CAAEI,aAAc,UAAWC,KAAM,kBAAmBL,KAAM,WAC1D,CAAEI,aAAc,UAAWC,KAAM,gBAAiBL,KAAM,WACxD,CAAEI,aAAc,UAAWC,KAAM,qBAAsBL,KAAM,YAEjEO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,aACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,cACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,SAAUC,KAAM,WAAYL,KAAM,WAC3DK,KAAM,WACNM,QAAS,CACL,CAAEP,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,QAASC,KAAM,OAAQL,KAAM,SAC7C,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,YAExDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,WAC3C,CAAEI,aAAc,UAAWC,KAAM,GAAIL,KAAM,YAE/CK,KAAM,eACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,UACNM,QAAS,CACL,CAAEP,aAAc,QAASC,KAAM,UAAWL,KAAM,SAChD,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,YAExDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,YAAaC,KAAM,UAAWL,KAAM,aACpD,CAAEI,aAAc,QAASC,KAAM,YAAaL,KAAM,SAClD,CAAEI,aAAc,QAASC,KAAM,mBAAoBL,KAAM,SACzD,CACII,aAAc,YACdC,KAAM,mBACNL,KAAM,aAEV,CAAEI,aAAc,YAAaC,KAAM,iBAAkBL,KAAM,aAC3D,CACII,aAAc,YACdC,KAAM,sBACNL,KAAM,aAEV,CAAEI,aAAc,UAAWC,KAAM,iBAAkBL,KAAM,WACzD,CACII,aAAc,YACdC,KAAM,0BACNL,KAAM,aAEV,CACII,aAAc,YACdC,KAAM,mBACNL,KAAM,aAEV,CACII,aAAc,YACdC,KAAM,oBACNL,KAAM,aAEV,CAAEI,aAAc,UAAWC,KAAM,oBAAqBL,KAAM,YAEhEK,KAAM,aACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,UACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gCACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,iBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gCACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,SACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,mBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,YAAaC,KAAM,UAAWL,KAAM,aACpD,CAAEI,aAAc,UAAWC,KAAM,WAAYL,KAAM,YAEvDK,KAAM,kBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,YACNM,QAAS,CACL,CAAEP,aAAc,SAAUC,KAAM,qBAAsBL,KAAM,UAC5D,CAAEI,aAAc,SAAUC,KAAM,mBAAoBL,KAAM,UAC1D,CAAEI,aAAc,SAAUC,KAAM,OAAQL,KAAM,UAC9C,CAAEI,aAAc,SAAUC,KAAM,UAAWL,KAAM,UACjD,CAAEI,aAAc,SAAUC,KAAM,OAAQL,KAAM,UAC9C,CAAEI,aAAc,SAAUC,KAAM,WAAYL,KAAM,UAClD,CAAEI,aAAc,SAAUC,KAAM,UAAWL,KAAM,UACjD,CAAEI,aAAc,SAAUC,KAAM,UAAWL,KAAM,UACjD,CAAEI,aAAc,SAAUC,KAAM,eAAgBL,KAAM,UACtD,CAAEI,aAAc,SAAUC,KAAM,OAAQL,KAAM,UAC9C,CACII,aAAc,SACdC,KAAM,yBACNL,KAAM,UAEV,CAAEI,aAAc,SAAUC,KAAM,kBAAmBL,KAAM,WAE7DO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,yBACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,iBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,QACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,QAASC,KAAM,WAAYL,KAAM,UAErDK,KAAM,qBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,uBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,kBAAmBC,KAAM,UAAWL,KAAM,WAC1D,CAAEI,aAAc,UAAWC,KAAM,SAAUL,KAAM,YAErDK,KAAM,YACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,SAAUL,KAAM,WACjD,CAAEI,aAAc,UAAWC,KAAM,UAAWL,KAAM,YAEtDK,KAAM,YACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,SACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,oBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,eACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gBACNM,QAAS,CACL,CAAEP,aAAc,6BAA8BC,KAAM,GAAIL,KAAM,YAElEO,gBAAiB,OACjBP,KAAM,YAEV,CAAEO,gBAAiB,UAAWP,KAAM,YCpiBeY,GACjDkB,EAAe,IAAIjB,EAAKa,IAAIC,SDsiBN,CAAC,CACrBnB,WAAW,EACXL,OAAQ,CACJ,CAAEM,SAAS,EAAOL,aAAc,QAASC,KAAM,SAAUL,KAAM,UAEnEK,KAAM,UACNL,KAAM,SAEV,CACIQ,WAAW,EACXL,OAAQ,CAAC,CACDM,SAAS,EACTL,aAAc,UACdC,KAAM,YACNL,KAAM,WAEV,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,SACNL,KAAM,WAEV,CAAES,SAAS,EAAOL,aAAc,QAASC,KAAM,SAAUL,KAAM,UAEnEK,KAAM,UACNL,KAAM,SAEV,CACIQ,WAAW,EACXL,OAAQ,CACJ,CAAEM,SAAS,EAAOL,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7D,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,YACNL,KAAM,WAEV,CACIS,SAAS,EACTL,aAAc,UACdC,KAAM,SACNL,KAAM,WAEV,CAAES,SAAS,EAAOL,aAAc,QAASC,KAAM,SAAUL,KAAM,UAEnEK,KAAM,SACNL,KAAM,SAEV,CACIG,OAAQ,GACRE,KAAM,uBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,qBACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,uBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACnDK,KAAM,UACNM,QAAS,CACL,CAAEP,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,QAASC,KAAM,UAAWL,KAAM,SAChD,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,WACpD,CAAEI,aAAc,OAAQC,KAAM,WAAYL,KAAM,SAEpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,oBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,UACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,UACNM,QAAS,CACL,CAAEP,aAAc,UAAWC,KAAM,mBAAoBL,KAAM,WAC3D,CACII,aAAc,UACdC,KAAM,yBACNL,KAAM,WAEV,CAAEI,aAAc,UAAWC,KAAM,kBAAmBL,KAAM,WAC1D,CAAEI,aAAc,UAAWC,KAAM,gBAAiBL,KAAM,WACxD,CAAEI,aAAc,UAAWC,KAAM,qBAAsBL,KAAM,YAEjEO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,WACNM,QAAS,CACL,CAAEP,aAAc,4BAA6BC,KAAM,GAAIL,KAAM,YAEjEO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,cACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,SAAUC,KAAM,WAAYL,KAAM,WAC3DK,KAAM,WACNM,QAAS,CACL,CAAEP,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,QAASC,KAAM,OAAQL,KAAM,SAC7C,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,YAExDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,WAC3C,CAAEI,aAAc,UAAWC,KAAM,GAAIL,KAAM,YAE/CK,KAAM,eACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,UACNM,QAAS,CACL,CAAEP,aAAc,QAASC,KAAM,UAAWL,KAAM,SAChD,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,YAExDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,YAAaC,KAAM,UAAWL,KAAM,aACpD,CAAEI,aAAc,QAASC,KAAM,YAAaL,KAAM,SAClD,CAAEI,aAAc,QAASC,KAAM,mBAAoBL,KAAM,SACzD,CAAEI,aAAc,UAAWC,KAAM,kBAAmBL,KAAM,WAC1D,CAAEI,aAAc,UAAWC,KAAM,iBAAkBL,KAAM,WACzD,CAAEI,aAAc,UAAWC,KAAM,YAAaL,KAAM,WACpD,CAAEI,aAAc,UAAWC,KAAM,iBAAkBL,KAAM,WACzD,CAAEI,aAAc,UAAWC,KAAM,sBAAuBL,KAAM,WAC9D,CACII,aAAc,UACdC,KAAM,0BACNL,KAAM,WAEV,CAAEI,aAAc,UAAWC,KAAM,mBAAoBL,KAAM,WAC3D,CAAEI,aAAc,UAAWC,KAAM,oBAAqBL,KAAM,WAC5D,CAAEI,aAAc,UAAWC,KAAM,oBAAqBL,KAAM,YAEhEK,KAAM,aACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,UACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gCACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,iBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gCACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,SACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,kBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,yBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,mBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,YAAaC,KAAM,UAAWL,KAAM,aACpD,CAAEI,aAAc,UAAWC,KAAM,WAAYL,KAAM,YAEvDK,KAAM,kBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,YACNM,QAAS,CACL,CAAEP,aAAc,SAAUC,KAAM,qBAAsBL,KAAM,UAC5D,CAAEI,aAAc,SAAUC,KAAM,mBAAoBL,KAAM,UAC1D,CAAEI,aAAc,SAAUC,KAAM,OAAQL,KAAM,UAC9C,CAAEI,aAAc,SAAUC,KAAM,UAAWL,KAAM,UACjD,CAAEI,aAAc,SAAUC,KAAM,OAAQL,KAAM,UAC9C,CAAEI,aAAc,SAAUC,KAAM,WAAYL,KAAM,UAClD,CAAEI,aAAc,SAAUC,KAAM,UAAWL,KAAM,UACjD,CAAEI,aAAc,SAAUC,KAAM,UAAWL,KAAM,UACjD,CAAEI,aAAc,SAAUC,KAAM,eAAgBL,KAAM,UACtD,CAAEI,aAAc,SAAUC,KAAM,OAAQL,KAAM,UAC9C,CACII,aAAc,SACdC,KAAM,yBACNL,KAAM,UAEV,CAAEI,aAAc,SAAUC,KAAM,kBAAmBL,KAAM,WAE7DO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,yBACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,iBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACpDK,KAAM,WACNM,QAAS,CAAC,CAAEP,aAAc,SAAUC,KAAM,GAAIL,KAAM,WACpDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,QACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,UAAWC,KAAM,KAAML,KAAM,WAC7C,CAAEI,aAAc,QAASC,KAAM,WAAYL,KAAM,UAErDK,KAAM,qBACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,uBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,CACJ,CAAEC,aAAc,kBAAmBC,KAAM,UAAWL,KAAM,WAC1D,CAAEI,aAAc,UAAWC,KAAM,SAAUL,KAAM,YAErDK,KAAM,YACNM,QAAS,CAAC,CAAEP,aAAc,OAAQC,KAAM,GAAIL,KAAM,SAClDO,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,CAAC,CAAEC,aAAc,UAAWC,KAAM,SAAUL,KAAM,YAC1DK,KAAM,YACNM,QAAS,GACTJ,gBAAiB,aACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,iBACNM,QAAS,CAAC,CAAEP,aAAc,kBAAmBC,KAAM,GAAIL,KAAM,YAC7DO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,oBACNM,QAAS,CAAC,CAAEP,aAAc,UAAWC,KAAM,GAAIL,KAAM,YACrDO,gBAAiB,OACjBP,KAAM,YAEV,CACIG,OAAQ,GACRE,KAAM,gBACNM,QAAS,CACL,CAAEP,aAAc,6BAA8BC,KAAM,GAAIL,KAAM,YAElEO,gBAAiB,OACjBP,KAAM,YAEV,CAAEO,gBAAiB,UAAWP,KAAM,YASR,8CCjsBjB+B,EAjOE,WACSC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,mBAA1D,IACMC,EAAUJ,aAAY,SAACC,GAAD,OAAWA,EAAMG,QAAQA,WAFhC,GAGMJ,aACzB,SAACC,GAAD,OAAWA,EAAMG,QAAQC,sBAEGC,mBAAS,KANlB,mBAMdC,EANc,KAMLC,EANK,OAOSF,oBAAS,GAPlB,mBAOdG,EAPc,KAOLC,EAPK,KASfC,EAAS,uCAAG,WAAOC,EAAaC,GAApB,SAAAC,EAAA,sDAChBC,QAAQC,IAAI,qBAEZnB,EAAcoB,QACXN,UAAUC,EAAaC,GACvBK,KAAK,CACJC,KAAMf,IAEPgB,GAAG,mBAAmB,SAACC,GACtBN,QAAQC,IAAI,6BAA8BK,MAE3CD,GAAG,WAAW,SAACE,GACdP,QAAQC,IAAI,oBAAqBM,GAEjCd,GAAW,MAEZY,GAAG,gBAAgB,SAACG,EAAoBD,GACvCP,QAAQC,IAAI,+BAAgCO,GAC5CR,QAAQC,IAAI,oBAAqBM,MAElCF,GAAG,SAAS,SAACI,GACZT,QAAQC,IAAI,kBAAmBQ,GAC/BhB,GAAW,MAtBC,2CAAH,wDA0BTiB,EAAmB,uCAAG,WAAOb,EAAaC,EAAStB,GAA7B,iBAAAuB,EAAA,sDAC1BC,QAAQC,IAAI,iCAEZR,GAAW,GAELkB,EAAqB,SAAVnC,EAAmBE,EAAeG,EAE/C+B,EAAiB,GAGnBA,EADElB,EAEU,SAAVlB,EACIV,EAAK+C,MAAMC,MAAM,oBAAqB,QACtChD,EAAK+C,MAAMC,MAAM,oBAAqB,SAE3BjB,EAGnBG,QAAQC,IAAI,mBAAoBW,GAEhCD,EAAST,QACNa,QAAQlD,EAAe+C,GACvBT,KAAK,CACJC,KAAMf,IAEPgB,GAAG,mBAAmB,SAACC,GACtBN,QAAQC,IAAI,2BAA4BK,MAEzCD,GAAG,WAAW,SAACE,GACdP,QAAQC,IAAI,kBAAmBM,MAEhCF,GAAG,gBAAgB,SAACG,EAAoBD,GACvCP,QAAQC,IAAI,6BAA8BO,GAC1CR,QAAQC,IAAI,kBAAmBM,MAEhCF,GAAG,SAAS,SAACI,GACZT,QAAQC,IAAI,gBAAiBQ,GAC7BhB,GAAW,MAEZvE,MAAK,WACJ4D,EAAcoB,QACXN,UAAUC,EAAaC,GACvBK,KAAK,CACJC,KAAMf,IAEPgB,GAAG,mBAAmB,SAACC,GACtBN,QAAQC,IAAI,6BAA8BK,MAE3CD,GAAG,WAAW,SAACE,GACdP,QAAQC,IAAI,oBAAqBM,GAEjCd,GAAW,MAEZY,GAAG,gBAAgB,SAACG,EAAoBD,GACvCP,QAAQC,IAAI,+BAAgCO,GAC5CR,QAAQC,IAAI,oBAAqBM,MAElCF,GAAG,SAAS,SAACI,GACZT,QAAQC,IAAI,kBAAmBQ,GAC/BhB,GAAW,SA3DO,2CAAH,0DAgEnBuB,EAAY,uCAAG,WAAOC,GAAP,2BAAAlB,EAAA,yDACnBC,QAAQC,IAAI,UAAWgB,GAElB5B,EAHc,uBAIjB6B,MAAM,oCAJW,6BAQX/C,EAAiB8C,EAAjB9C,MAAOK,EAAUyC,EAAVzC,MAEfwB,QAAQC,IAAI,SAAU9B,GAER,SAAVK,EAZe,iBAaX2C,GAAkC,IAApB5C,WAAWJ,IAAc7B,WAC7CmD,GAAW,GAEXV,EAAamB,QACVN,UAAUuB,GACVhB,KAAK,CACJC,KAAMf,IAEPgB,GAAG,mBAAmB,SAACC,GACtBN,QAAQC,IAAI,6BAA8BK,MAE3CD,GAAG,WAAW,SAACE,GACdP,QAAQC,IAAI,oBAAqBM,GAEjCd,GAAW,MAEZY,GAAG,gBAAgB,SAACG,EAAoBD,GACvCP,QAAQC,IAAI,+BAAgCO,GAC5CR,QAAQC,IAAI,oBAAqBM,MAElCF,GAAG,SAAS,SAACI,GACZT,QAAQC,IAAI,kBAAmBQ,GAC/BhB,GAAW,MAnCE,+BAsCXK,EAAoB,SAAVtB,EAAmB,EAAI,EAEjCmC,EAAqB,SAAVnC,EAAmBE,EAAeG,EAE7CgB,EACM,SAAVrB,EACIV,EAAK+C,MAAMC,MAAM3C,EAAO,QACxBL,EAAK+C,MAAMC,MAAM3C,EAAO,SAE9B6B,QAAQC,IAAI,eAAgBJ,GA/CX,UAiDYc,EAAST,QACnCkB,UAAU/B,EAASxB,GACnBwD,OAnDc,QAiDXT,EAjDW,OAqDjBZ,QAAQC,IAAI,8BAA+BW,GAEvCA,EAAiBf,EACnBD,EAAUC,EAAaC,GAEvBY,EAAoBb,EAAaC,EAAStB,GA1D3B,4CAAH,sDAiElB,OAFAwB,QAAQC,IAAI,WAAYP,GAGtB,sBAAK4B,UAAU,iBAAf,UACE,iEACA,qBAAKA,UAAU,QAAf,SAKE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CACE7C,cAAeA,EACf8C,iBAAkBvD,EAClBwD,SAAUR,EAHZ,SAKE,eAAC,IAAD,WACE,8BACE,cAAC,IAAD,CAAO1D,KAAK,QAAQmE,YAAY,mBAElC,8BACE,cAAC,IAAD,CAAcnE,KAAK,YAErB,8BACE,eAAC,IAAD,CAAOoE,GAAG,SAASpE,KAAK,QAAxB,UACE,wBAAQa,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,uBAGJ,8BACE,cAAC,IAAD,CAAcb,KAAK,YAErB,kCACE,uBACEL,KAAK,WACLyC,QAASA,EACTiC,SAAU,kBAAMhC,GAAYD,IAC5BkC,SAAUpC,IAEZ,wDAEF,8BACE,wBAAQvC,KAAK,SAASqE,UAAU,aAAaM,SAAUpC,EAAvD,SACGA,EAAU,gBAAkB,0BAQzC,mBACEqC,KAAK,uGACLC,OAAO,SACPC,IAAI,aAHN,qCC5OSC,EAhBD,SAACC,GAAW,IAEdC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAElB,OADAnC,QAAQC,IAAI,iBAAkBgC,GAE1B,mCACCE,EACD,qBAAKb,UAAU,iBAAf,SACKY,IAEJ,QCLD3C,EAAa6C,WAoDNC,EAlDM,SAACJ,GAAW,IACvBK,EAA4BL,EAA5BK,WAAYC,EAAgBN,EAAhBM,YACdC,EAAWC,cAFa,EAIAlD,GAAS,GAJT,mBAIvBC,EAJuB,KAIdC,EAJc,OAKFF,GAAU,GALR,mBAKvBmD,EALuB,KAKfC,EALe,KAOxBC,EAAa,uCAAG,WAAOlG,GAAP,iBAAAqD,EAAA,sEAElB4C,EAAUjG,GACV+C,GAAW,GAHO,SAIZoD,EAAe9F,MAAML,GAJT,OAKZF,EAASqG,EAAeC,YAC9BN,EAASzF,EAAM,CAAEG,SAAQ,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAQuG,YAAV,aAAE,EAAcC,eACzCT,GAAY,GACZU,aAAaC,QAAQ,aAAcxG,EAAMJ,YACzC0D,QAAQC,IAAI,gBAAiBzD,GAC7B8F,IAVkB,kDAalBtC,QAAQC,IAAI,wBAAZ,MAbkB,yBAgBlBR,GAAW,GACXkD,GAAW,GAjBO,6EAAH,sDAqBnB,OACE,sBAAKrB,UAAU,YAAf,UACE,iDAEE,qBAAKA,UAAU,WAAW6B,QAASb,EAAnC,SACE,mBAAGhB,UAAU,aAAb,wBAGJ,8BACE,wBAAQ6B,QAAS,kBAAMP,EAAc,IAAIhB,SAAUpC,EAAnD,SACGA,GAAsB,IAAXkD,EAAe,aAAe,2BAG9C,8BACE,wBAAQS,QAAS,kBAAMP,EAAc,IAAIhB,SAAUpC,EAAnD,SACGA,GAAsB,IAAXkD,EAAe,aAAe,8BCzC9CU,EAAmBC,EAAQ,KAE3BC,EAAerF,MAAaC,MAAM,CACtCqF,WAAYtF,MACTG,SAAS,8BACTC,KAAK,kBAFI,4BAE2C,SAACgB,GAAD,OACnD+D,EAAiBI,UAAUnE,QAI3BoE,EAAgB,CACpBF,WAAY,IAgVCG,EA7UH,SAACzB,GACX,IAAM/E,EAAW+B,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKjC,YAC7CkC,EAAkBH,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,mBACpDuE,EAAqB1E,aACzB,SAACC,GAAD,OAAWA,EAAMG,QAAQC,sBAErBkD,EAAWC,cANI,EAOGlD,oBAAS,GAPZ,mBAOd4C,EAPc,KAORyB,EAPQ,OAQsBrE,oBAAS,GAR/B,mBAQdsE,EARc,KAQAC,EARA,OASqBvE,oBAAS,GAT9B,mBASdwE,EATc,KASCC,EATD,OAUiBzE,mBAAS,IAV1B,mBAUd0E,EAVc,KAUDC,EAVC,OAWW3E,mBAAS,IAXpB,mBAWd4E,EAXc,KAWJC,EAXI,OAYe7E,mBAAS,IAZxB,mBAYd8E,EAZc,KAYFC,EAZE,OAaqB/E,mBAAS,IAb9B,mBAadgF,EAbc,KAaCC,EAbD,OAcYjF,mBAAS,IAdrB,mBAcdkF,EAdc,KAcFC,EAdE,KAgBfC,EAAiB1G,MAAaC,MAAM,CACxCmB,QAASpB,MACNG,SAAS,0BACTC,KAAK,kBAFC,4BAE8C,SAACgB,GAEpD,OADAW,QAAQC,IAAI,mBAAoBZ,GACzB+D,EAAiBI,UAAUnE,QAIlCuF,EAAkB,CACtBvF,QAASoF,GAOLI,EAAe,uCAAG,sBAAA9E,EAAA,0DAClBX,EADkB,8BAGHyD,EAAeC,YAHZ,gCAKVD,EAAeiC,mBALL,OAMhBtC,EL/CC,CACHvF,KAAM,WK+CJgG,aAAa8B,QACb9C,EAAMM,aAAY,GARF,yDAWlBvC,QAAQC,IAAI,wBAAZ,MAXkB,gCAcpB2D,GAAQ,GAdY,0DAAH,qDAkBfoB,GAAc,uCAAG,WAAO/D,GAAP,iBAAAlB,EAAA,kEAEnB+D,GAAmB,GACD,EACZtH,EAASqG,EAAeC,YACtBzD,EAAY4B,EAAZ5B,QACRW,QAAQC,IAAI,cAAegB,GACtB7B,GACH8E,EAAe,+BAEZP,GACHO,EAAe,qCAEX1H,EAba,kCAcIA,EAAOyI,OAAOC,SACjC,CACEC,QAAS,CACP,CACEC,QAAS,cACT9H,KAAM,WACN+H,cAAe,CACb,CACEC,MAAO9I,EAAOuG,KAAKC,YACnBuC,WAAY/I,EAAOuG,KAAKwC,aAG5BC,KAAM,CACJpF,KAAM5D,EAAOuG,KAAKC,YAClByC,GAAI,eACJC,SAAS,GAAD,OA1BF,GA0BiBC,QAAQ,GAAvB,QACRC,KAAM,sBAGV,CACER,QAAS,eACT9H,KAAM,cACN+H,cAAe,CACb,CACEC,MAAO9I,EAAOuG,KAAKC,YACnBuC,WAAY/I,EAAOuG,KAAKwC,aAG5BC,KAAM,CACJJ,QAAS5I,EAAOuG,KAAKC,YACrByB,WAAYpF,MAKpB,CACEwG,WAAW,EACXC,aAAc,EACdC,cAAe,KApDF,iBAwDfjC,GAAmB,GACnBU,EAAiB,uBACjBN,EAAe,KA1DA,wBA6DjBJ,GAAmB,GA7DF,0DAgEnB9D,QAAQC,IAAI,UAAZ,MACAiE,EAAe,KAAE8B,SACjBlC,GAAmB,GAlEA,yBAoEnBA,GAAmB,GApEA,6EAAH,sDAwEdmC,GAAY,uCAAG,WAAOhF,GAAP,iBAAAlB,EAAA,kEAEjBiE,GAAiB,GACC,EACZxH,EAASqG,EAAeC,YACtBS,EAAetC,EAAfsC,WACRvD,QAAQC,IAAI,cAAesD,GACtBnE,GACHgF,EAAY,+BAETT,GACHS,EAAY,qCAER5H,EAbW,kCAcMA,EAAOyI,OAAOC,SACjC,CACEC,QAAS,CACP,CACEC,QAAS,cACT9H,KAAM,WACN+H,cAAe,CACb,CACEC,MAAO9I,EAAOuG,KAAKC,YACnBuC,WAAY/I,EAAOuG,KAAKwC,aAG5BC,KAAM,CACJpF,KAAM5D,EAAOuG,KAAKC,YAClByC,GAAI,eACJC,SAAS,GAAD,OA1BF,GA0BiBC,QAAQ,GAAvB,QACRC,KAAM,sBAGV,CACER,QAAS,eACT9H,KAAM,eACN+H,cAAe,CACb,CACEC,MAAO9I,EAAOuG,KAAKC,YACnBuC,WAAY/I,EAAOuG,KAAKwC,aAG5BC,KAAM,CACJJ,QAAS5I,EAAOuG,KAAKC,YACrBkD,cAAe3C,MAKvB,CACEsC,WAAW,EACXC,aAAc,EACdC,cAAe,KApDJ,iBAwDb/B,GAAiB,GACjBM,EAAc,uBACdF,EAAY,KA1DC,wBA6DfJ,GAAiB,GA7DF,0DAgEjBI,EAAY,KAAE4B,SACdhC,GAAiB,GAjEA,yBAmEjBA,GAAiB,GAnEA,6EAAH,sDAuEZmC,GAAiB,uCAAG,gCAAApG,EAAA,oEAEDqG,OAAbC,EAFc,EAEdA,SAGQ,QAFIA,EAAZrK,QAHc,qBAMdqK,EANc,iCAOKA,EAASC,QAAQ,CACtCC,OAAQ,wBARQ,OAOZC,EAPY,OAUlB9B,EAAW8B,EAAS,IACpBhE,EL5NC,CACHvF,KAAM,WACNoC,QK0NoB,CAAEA,QAASmH,EAAS,IL7NrBnH,UKkNC,gCAcpB6B,MAAM,mDAdc,0DAiBtBlB,QAAQC,IAAI,wBAAZ,MAjBsB,0DAAH,qDAqBvB,OACE,gCACE,sBAAKqB,UAAU,iBAAf,UACE,sEACA,sBAAKA,UAAU,QAAf,UACE,wBAAQA,UAAU,WAAW6B,QAAS0B,EAAtC,SACGzF,EAAe,sBACGlC,GACf,0BAEN,wBAAQiG,QAASgD,GAAjB,SACK1B,EAAa,YAAc,wBAEhC,qBAAKnD,UAAU,WAAf,SACE,cAAC,IAAD,CACE7C,cAAemG,EACfrD,iBAAkBoD,EAClBnD,SAAUwD,GAHZ,SAKG,gBAAGyB,EAAH,EAAGA,cAAH,OACC,eAAC,IAAD,WACE,8BACE,cAAC,IAAD,CACEnJ,KAAK,UACLmE,YAAY,yBACZ0B,QAAS,kBAAMsD,EAAc,UAAWhC,QAG5C,8BACE,cAAC,IAAD,CAAcnH,KAAK,UAAUgE,UAAU,YAEzC,gCACE,qBAAKA,UAAU,OAAf,iEAGA,wBACErE,KAAK,SACLqE,UAAU,UACVM,SAAUiC,EAHZ,SAKGA,EAAe,cAAgB,2BAQ9C,mBACEhC,KAAK,mGACLC,OAAO,SACPC,IAAI,aAHN,iCAOCkC,EACC,qBAAK3C,UAAU,QAAf,SAAwB2C,IAExB,qBAAK3C,UAAU,UAAf,SAA0BiD,IAE3BpC,EACC,cAAC,EAAD,CAAOA,KAAMA,EAAb,SACE,cAAC,EAAD,CACEG,WAzPO,WACjBsB,GAAQ,IAyPErB,YAAaN,EAAMM,gBAGrB,QAGN,sBAAKjB,UAAU,iBAAf,UACE,oEACA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CACE7C,cAAegF,EACflC,iBAAkB+B,EAClB9B,SAAUyE,GAHZ,SAKG,gBAAGQ,EAAH,EAAGA,cAAH,OACC,eAAC,IAAD,WACE,8BACE,cAAC,IAAD,CACEnJ,KAAK,aACLmE,YAAY,6BACZ0B,QAAS,kBAAMsD,EAAc,aAAchC,QAG/C,8BACE,cAAC,IAAD,CAAcnH,KAAK,aAAagE,UAAU,YAE5C,gCACE,qBAAKA,UAAU,OAAf,iEAGA,wBACErE,KAAK,SACLqE,UAAU,UACVM,SAAUmC,EAHZ,SAKGA,EAAgB,WAAa,gCAQ3CI,EACC,qBAAK7C,UAAU,QAAf,SAAwB6C,IAExB,qBAAK7C,UAAU,UAAf,SAA0B+C,W,iBClV9BqC,E,MAAMC,GAHI,CACdC,aAAc,mCAIV5I,EAASC,MAAaC,MAAM,CAChCC,MAAOF,MACJG,SAAS,wBACTC,KAAK,YAFD,4BAE0C,SAACC,GAAD,OAASuI,SAASvI,GAAO,KAC1EE,MAAOP,MAAaG,SAAS,yBAGzBK,EAAgB,CACpBN,MAAO,GACPK,MAAO,WAuNMsI,EApNQ,SAAC7E,GACtB,IAAM/E,EAAW+B,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKjC,YAC7CkC,EAAkBH,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,mBACpDuE,EAAqB1E,aACzB,SAACC,GAAD,OAAWA,EAAMG,QAAQC,sBAJK,EAMIC,mBAAS,IANb,mBAMzBwH,EANyB,KAMfC,EANe,OAOEzH,mBAAS,CAAC,YAPZ,mBAOZ0H,GAPY,aAQF1H,oBAAS,GARP,mBAQzBC,EARyB,KAQhBC,EARgB,OASAF,mBAAS,IATT,mBASzB4E,EATyB,KASfC,EATe,OAUI7E,mBAAS,IAVb,mBAUzB8E,EAVyB,KAUbC,EAVa,KAYxB4C,EAAajF,EAAbiF,SACFC,EAAS,uCAAG,8BAAApH,EAAA,6DACZqH,EAAS,GADG,SAEOV,EAAIW,aAAa,CACtCC,KAAM,eACNC,MAAO,eACPC,MAAO,eACPC,KAAM,SANQ,cAEVC,EAFU,QAQHC,KAAKC,QAChBF,EAASC,KAAKE,KAAI,SAACC,GACjBV,EAAOW,KAAKD,EAAIE,OAAO1L,eAG3B0D,QAAQC,IAAI,aAAcmH,GAC1BH,EAAWG,GAdK,kBAeTA,GAfS,2CAAH,qDAkBTa,EAAU,uCAAG,WAAOb,EAAQhC,GAAf,qBAAArF,EAAA,yDACXmI,EAAU,GADC,UAGXd,EAAOQ,OAHI,iBAIb5H,QAAQC,IAAI,eAAgBmF,GAJf,cAKQgC,GALR,aAAArH,EAAA,wCAAAA,EAAA,6DAKFoI,EALE,QAMLC,EAAa,CACjBd,KAAM,eACNG,MAAM,EACNY,MAAO,IACPd,MAAOY,EAAOG,MAAM,KAAK,GACzBd,MAAO,YACPe,UAAWnD,GAZF,SAcaoD,MACtB,yDACA,CACEjC,OAAQ,OACRkC,KAAMC,KAAKC,UAAUP,KAlBd,cAcLQ,EAdK,gBAsBcA,EAAUnB,OAtBxB,OAsBLoB,EAtBK,OAuBX7I,QAAQC,IAAI,cAAe4I,GACvBA,EAAWlB,KAAKC,QAClBiB,EAAWlB,KAAKE,KAAI,SAACC,GACfA,EAAI1C,SAAWA,GACjB8C,EAAQH,KAAKc,EAAWlB,KAAK,GAAGmB,YA3B3B,8QAgCb9I,QAAQC,IAAI,kBAAmBiI,GAC/BlB,EAAgBkB,GAjCH,0DAoCflI,QAAQC,IAAI,UAAZ,MACA+G,EAAgBkB,GArCD,uEAAH,wDAyChBa,qBAAU,WACR5B,IAOID,GANQ,uCAAG,4BAAAnH,EAAA,sEACQoH,IADR,UACPC,EADO,QAEThI,IAAmBgI,EAAOQ,OAFjB,gCAGLK,EAAWb,EAAQlK,GAHd,2CAAH,oDAOV8L,GAEG9B,GACHF,EAAgB,MAEjB,CAACE,IAEJ,IAAM+B,EAAc,uCAAG,WAAOhI,GAAP,uBAAAlB,EAAA,kEAEnBN,GAAW,GACHtB,EAAiB8C,EAAjB9C,MAAOK,EAAUyC,EAAVzC,MACThC,EAASqG,EAAeC,YACzB1D,GACHgF,EAAY,+BAETT,GACHS,EAAY,qCAER5H,EAXa,uBAcL,UAATgC,GACD4G,EAAS,eACT8D,EAAQ,iBAER9D,EAAQ,eACR8D,EAAQ,gBAnBO,UAqBI1M,EAAOyI,OAAOC,SACjC,CACEC,QAAS,CACP,CACEC,QAASA,EACT9H,KAAM,WACN+H,cAAe,CACb,CACEC,MAAO9I,EAAOuG,KAAKC,YACnBuC,WAAY/I,EAAOuG,KAAKwC,aAG5BC,KAAM,CACJpF,KAAM5D,EAAOuG,KAAKC,YAClByC,GAAIyD,EACJxD,SAAS,GAAD,OAAKmB,SAAS1I,GAAOwH,QAC3BkB,SAASrI,EAAM8J,MAAM,KAAK,KADpB,YAEH9J,EAAM8J,MAAM,KAAK,GAFd,KAGR1C,KAAK,YAAD,OAAcpH,EAAM8J,MAAM,KAAK,GAA/B,cAKZ,CACEzC,WAAW,EACXC,aAAc,EACdC,cAAe,KA/CF,iBAmDftG,GAAW,GACX6E,EAAc,uBACdF,EAAY,KArDG,wBAwDjB3E,GAAW,GAxDM,0DA2DnBO,QAAQC,IAAI,6BAA8ByI,KAAKS,MAAMT,KAAKC,UAAL,QACrDvE,EAAY,KAAE4B,SACdvG,GAAW,GA7DQ,yBA+DnBA,GAAW,GA/DQ,6EAAH,sDAmEpB,OACE,sBAAK6B,UAAU,iBAAf,UACE,iEACA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CACE7C,cAAeA,EACf8C,iBAAkBvD,EAClBwD,SAAUyH,EAHZ,SAKE,eAAC,IAAD,WACGlC,EAASc,KAAI,SAACiB,GAAD,OACZ,qBAAKxH,UAAU,cAAf,SAA8BwH,OAEhC,8BACE,cAAC,IAAD,CAAOxL,KAAK,QAAQmE,YAAY,mBAElC,8BACE,cAAC,IAAD,CAAcnE,KAAK,QAAQgE,UAAU,YAEvC,8BACE,eAAC,IAAD,CAAOI,GAAG,SAASpE,KAAK,QAAxB,UAME,wBAAQa,MAAM,UAAd,mBACA,wBAAQA,MAAM,QAAd,iBACA,wBAAQA,MAAM,SAAd,uBAGJ,8BACE,cAAC,IAAD,CAAcb,KAAK,QAAQgE,UAAU,YAEvC,8BACE,wBACErE,KAAK,SACLqE,UAAU,cACVM,SAAUpC,EAHZ,SAKGA,EAAU,gBAAkB,0BAOxC2E,EACC,qBAAK7C,UAAU,QAAf,SAAwB6C,IAExB,qBAAK7C,UAAU,UAAf,SAA0B+C,QC/N1B0E,EAAwB3G,YAAb7C,EAAa6C,WA8CjBgH,MA5Cf,WAAgB,IAAD,EACmB7J,GAAS,GAD5B,mBACN2H,EADM,KACImC,EADJ,KAGP9G,EAAc,SAAC+G,GACnBD,EAAYC,IAGR9G,EAAWC,cA4BjB,OA1BAsG,GAAU,WACR,IAAMnG,EAAa,uCAAG,WAAO2G,GAAP,iBAAAxJ,EAAA,+EAEZ8C,EAAe9F,MAAMwM,GAFT,QAGZ/M,EAASqG,EAAeC,eAG5BN,EAASzF,EAAM,CAAEG,SAAQ,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAQuG,YAAV,aAAE,EAAcC,eACzCT,GAAY,IAPI,gDAUlBvC,QAAQC,IAAI,wBAAZ,MAVkB,yDAAH,sDAcbsJ,EAAatG,aAAauG,QAAQ,cAExC,GAAMD,EAAY,CAChB,IAAI/M,EAASqK,SAAS0C,GAElB/M,GAAU,GACZoG,EAAcpG,MAGjB,IAGD,gCACE,cAAC,EAAD,CAAK+F,YAAaA,IAClB,cAAC,EAAD,IACA,cAAC,EAAD,CAAgB2E,SAAUA,Q,iBCjD1BuC,GAAe,CACjBnK,oBAAoB,EACpBD,QAAS,IAgBEqK,GAbI,WAAmC,IAAlCxK,EAAiC,uDAAzBuK,GAAcE,EAAW,uCACjD,OAAQA,EAAO1M,MACX,IAAK,WACD,OAAO,2BACAiC,GADP,IAEII,oBAAoB,EACpBD,QAASsK,EAAOtK,UAExB,QACI,OAAOH,ICdbuK,GAAe,CACjBrK,iBAAiB,EACjBlC,SAAU,IA8BC0M,GA3BK,WAAmC,IAAlC1K,EAAiC,uDAAzBuK,GAAcE,EAAW,uCAClD,OAAQA,EAAO1M,MACX,IAAK,QACD,OAAO,2BACAiC,GADP,IAEIE,iBAAiB,EACjBlC,SAAUyM,EAAOzM,WAGzB,IAAK,SACD,OAAO,2BACAgC,GADP,IAEIE,iBAAiB,EACjBlC,SAAU,KASlB,QACI,OAAOgC,ICxBb2K,GAAcC,YAAgB,CAChC3K,KAAMyK,GACNvK,QAASqK,KCJEK,GDODC,YAAYH,IED1BI,IAASC,OACN,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGFK,SAASC,eAAe,SAM5BtP,M","file":"static/js/main.29c76a72.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { initAccessContext } from 'eos-transit'\nimport scatter from 'eos-transit-scatter-provider'\nimport AnchorLinkProvider from 'eos-transit-anchorlink-provider'\n// import { Api, JsonRpc } from 'eosjs';\n\nclass WalletProvider {\n\n    accessContext;\n    wallet;\n\n\n    constructor() {\n        this.accessContext = initAccessContext({\n            appName: 'bridge_app',\n            network: {\n                protocol: 'https',\n                host: 'api.kylin.alohaeos.com',\n                port: 443,\n                chainId: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'\n            },\n            walletProviders: [\n                scatter(),\n                AnchorLinkProvider(Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15))\n            ]\n        })\n\n        this.wallet = undefined\n    }\n\n\n    async login(index) {\n        const walletProviders = this.accessContext.getWalletProviders()\n        const selectedProvider = walletProviders[index]\n        const wallet = this.accessContext.initWallet(selectedProvider)\n        this.wallet = wallet\n\n        await wallet.connect()\n        await wallet.login()\n    }\n\n    getWallet(){\n        return this.wallet\n    }\n\n    async disconnectWallet() {\n        if (!!this.wallet) {\n            await this.wallet.terminate()\n            this.wallet = undefined\n        }\n    }\n}\n\nexport default new WalletProvider()","export const login = ({ username }) => {\n    return {\n        type: 'LOGIN',\n        username\n    }\n}\n\nexport const Ethlogin = ({ address }) => {\n    return {\n        type: 'ETHLOGIN',\n        address\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}","export const tokenAbi = [{\n        inputs: [\n            { internalType: \"uint256\", name: \"_initialAmount\", type: \"uint256\" },\n            { internalType: \"string\", name: \"_tokenName\", type: \"string\" },\n            { internalType: \"uint8\", name: \"_decimalUnits\", type: \"uint8\" },\n            { internalType: \"string\", name: \"_tokenSymbol\", type: \"string\" },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [{\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: \"address\", name: \"_owner\", type: \"address\" },\n            { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n        ],\n        name: \"allocateTo\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            { internalType: \"address\", name: \"\", type: \"address\" },\n            { internalType: \"address\", name: \"\", type: \"address\" },\n        ],\n        name: \"allowance\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: \"address\", name: \"_spender\", type: \"address\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n        ],\n        name: \"approve\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        name: \"balanceOf\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: \"address\", name: \"dst\", type: \"address\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n        ],\n        name: \"transfer\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: \"address\", name: \"src\", type: \"address\" },\n            { internalType: \"address\", name: \"dst\", type: \"address\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n        ],\n        name: \"transferFrom\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n\nexport const bridgeAbi = [{\n        anonymous: false,\n        inputs: [\n            { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\n        ],\n        name: \"Failure\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [{\n                indexed: false,\n                internalType: \"address\",\n                name: \"recipient\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\n        ],\n        name: \"Receipt\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: false, internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"recipient\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\n        ],\n        name: \"Refund\",\n        type: \"event\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n        name: \"acceptTokenOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"addGasSome\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"address\", name: \"_token_address\", type: \"address\" },\n            {\n                internalType: \"uint256\",\n                name: \"_max_mint_period_amount\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"_max_mint_period\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"_max_mint_allowed\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"_EOS_precision\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"_ethereum_precision\", type: \"uint256\" },\n        ],\n        name: \"addNewToken\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\n        name: \"addOwner\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"address\", name: \"account\", type: \"address\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n        ],\n        name: \"approvePoolBalance\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"available_batch_id\",\n        outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"available_message_id\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        name: \"batches\",\n        outputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"message\", type: \"bytes\" },\n            { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\n            { internalType: \"bool\", name: \"received\", type: \"bool\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"changeLockByOwner\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"claimGas\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"configs\",\n        outputs: [\n            { internalType: \"uint256\", name: \"max_mint_allowed\", type: \"uint256\" },\n            {\n                internalType: \"uint256\",\n                name: \"max_mint_period_amount\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"max_mint_period\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"EOS_precision\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"ethereum_precision\", type: \"uint256\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        name: \"depositors\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n        name: \"executedMsg\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        name: \"gas_used\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint64\", name: \"batch_id\", type: \"uint64\" }],\n        name: \"getBatch\",\n        outputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n            { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"bytes32\", name: \"\", type: \"bytes32\" },\n            { internalType: \"address\", name: \"\", type: \"address\" },\n        ],\n        name: \"hasConfirmed\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"inbound\",\n        outputs: [\n            { internalType: \"bytes\", name: \"message\", type: \"bytes\" },\n            { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"address[]\", name: \"_owners\", type: \"address[]\" },\n            { internalType: \"uint8\", name: \"_required\", type: \"uint8\" },\n            { internalType: \"uint8\", name: \"_required_secure\", type: \"uint8\" },\n            {\n                internalType: \"address[]\",\n                name: \"_token_contracts\",\n                type: \"address[]\",\n            },\n            { internalType: \"uint256[]\", name: \"_EOS_precision\", type: \"uint256[]\" },\n            {\n                internalType: \"uint256[]\",\n                name: \"_ethereum_precision\",\n                type: \"uint256[]\",\n            },\n            { internalType: \"address\", name: \"_uniswapRouter\", type: \"address\" },\n            {\n                internalType: \"uint256[]\",\n                name: \"_max_mint_period_amount\",\n                type: \"uint256[]\",\n            },\n            {\n                internalType: \"uint256[]\",\n                name: \"_max_mint_period\",\n                type: \"uint256[]\",\n            },\n            {\n                internalType: \"uint256[]\",\n                name: \"_max_mint_allowed\",\n                type: \"uint256[]\",\n            },\n            { internalType: \"uint256\", name: \"_min_eth_required\", type: \"uint256\" },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        name: \"isOwner\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"last_incoming_batch_block_num\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"last_mint_time\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"last_outgoing_batch_block_num\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"locked\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"min_eth_required\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"address[]\", name: \"_owners\", type: \"address[]\" },\n            { internalType: \"uint256\", name: \"required\", type: \"uint256\" },\n        ],\n        name: \"modifyConsensus\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"msg_types\",\n        outputs: [\n            { internalType: \"uint64\", name: \"address_registered\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"address_modified\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"mint\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"deposit\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"lock\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"max_mint\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"min_eth\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"low_eth\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"eth_received\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"swap\", type: \"uint64\" },\n            {\n                internalType: \"uint64\",\n                name: \"max_mint_period_amount\",\n                type: \"uint64\",\n            },\n            { internalType: \"uint64\", name: \"max_mint_period\", type: \"uint64\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"next_incoming_batch_id\",\n        outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n        name: \"numOfConfirmed\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"outbound\",\n        outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"_message\", type: \"bytes\" },\n        ],\n        name: \"pushInboundMessage\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"required_sigs\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"required_sigs_secure\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"address payable\", name: \"account\", type: \"address\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n        ],\n        name: \"sendEther\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n        ],\n        name: \"sendToken\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"tokens\",\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"total_period_mint\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"total_tokens\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"uniswapRouter\",\n        outputs: [\n            { internalType: \"contract UniswapV2Router02\", name: \"\", type: \"address\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    { stateMutability: \"payable\", type: \"receive\" },\n];\n\nexport const dappBrigeAbi = [{\n        anonymous: false,\n        inputs: [\n            { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\n        ],\n        name: \"Failure\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [{\n                indexed: false,\n                internalType: \"address\",\n                name: \"recipient\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\n        ],\n        name: \"Receipt\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: false, internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"recipient\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            { indexed: false, internalType: \"bytes\", name: \"reason\", type: \"bytes\" },\n        ],\n        name: \"Refund\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"acceptTokenOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"available_batch_id\",\n        outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"available_message_id\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        name: \"batches\",\n        outputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"message\", type: \"bytes\" },\n            { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\n            { internalType: \"bool\", name: \"received\", type: \"bool\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"changeLockByOwner\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"claimGas\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"configs\",\n        outputs: [\n            { internalType: \"uint256\", name: \"max_mint_allowed\", type: \"uint256\" },\n            {\n                internalType: \"uint256\",\n                name: \"max_mint_period_amount\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"max_mint_period\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"EOS_precision\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"ethereum_precision\", type: \"uint256\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"eosToEth\",\n        outputs: [\n            { internalType: \"contract EosToEthTokenpeg\", name: \"\", type: \"address\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n        name: \"executedMsg\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        name: \"gas_used\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint64\", name: \"batch_id\", type: \"uint64\" }],\n        name: \"getBatch\",\n        outputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n            { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"bytes32\", name: \"\", type: \"bytes32\" },\n            { internalType: \"address\", name: \"\", type: \"address\" },\n        ],\n        name: \"hasConfirmed\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"inbound\",\n        outputs: [\n            { internalType: \"bytes\", name: \"message\", type: \"bytes\" },\n            { internalType: \"uint256\", name: \"block_num\", type: \"uint256\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"address[]\", name: \"_owners\", type: \"address[]\" },\n            { internalType: \"uint8\", name: \"_required\", type: \"uint8\" },\n            { internalType: \"uint8\", name: \"_required_secure\", type: \"uint8\" },\n            { internalType: \"address\", name: \"_token_contract\", type: \"address\" },\n            { internalType: \"address\", name: \"_uniswapRouter\", type: \"address\" },\n            { internalType: \"address\", name: \"_eosToEth\", type: \"address\" },\n            { internalType: \"uint256\", name: \"_EOS_precision\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"_ethereum_precision\", type: \"uint256\" },\n            {\n                internalType: \"uint256\",\n                name: \"_max_mint_period_amount\",\n                type: \"uint256\",\n            },\n            { internalType: \"uint256\", name: \"_max_mint_period\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"_max_mint_allowed\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"_min_eth_required\", type: \"uint256\" },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        name: \"isOwner\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"last_incoming_batch_block_num\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"last_mint_time\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"last_outgoing_batch_block_num\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"locked\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"max_mint_period\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"max_mint_period_amount\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"min_eth_required\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"address[]\", name: \"_owners\", type: \"address[]\" },\n            { internalType: \"uint256\", name: \"required\", type: \"uint256\" },\n        ],\n        name: \"modifyConsensus\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"msg_types\",\n        outputs: [\n            { internalType: \"uint64\", name: \"address_registered\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"address_modified\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"mint\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"deposit\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"lock\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"max_mint\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"min_eth\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"low_eth\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"eth_received\", type: \"uint64\" },\n            { internalType: \"uint64\", name: \"swap\", type: \"uint64\" },\n            {\n                internalType: \"uint64\",\n                name: \"max_mint_period_amount\",\n                type: \"uint64\",\n            },\n            { internalType: \"uint64\", name: \"max_mint_period\", type: \"uint64\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"next_incoming_batch_id\",\n        outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n        name: \"numOfConfirmed\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        name: \"outbound\",\n        outputs: [{ internalType: \"uint64\", name: \"\", type: \"uint64\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"uint256\", name: \"id\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"_message\", type: \"bytes\" },\n        ],\n        name: \"pushInboundMessage\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"required_sigs\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"required_sigs_secure\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { internalType: \"address payable\", name: \"account\", type: \"address\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n        ],\n        name: \"sendEther\",\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" }],\n        name: \"sendToken\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"token_contract\",\n        outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"total_period_mint\",\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"uniswapRouter\",\n        outputs: [\n            { internalType: \"contract UniswapV2Router02\", name: \"\", type: \"address\" },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    { stateMutability: \"payable\", type: \"receive\" },\n];\n\nexport const usdcAddress = \"0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C\";\n\nexport const bridgeAddress = \"0x0cA9eFC5075D924d4E5F5a628283DE4333A1a0Cf\";\n\nexport const daiAddress = \"0xaD6D458402F60fD3Bd25163575031ACDce07538D\";\n\nexport const dappBrigeAddress = \"0xA80bbbe16EfF95c94674D4DdD2410BF3365d5b14\";","import * as Web3 from \"web3\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  usdcAddress,\n  bridgeAbi,\n  bridgeAddress,\n  daiAddress,\n  tokenAbi,\n  dappBrigeAbi,\n  dappBrigeAddress,\n} from \"./abi\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst web3 = new Web3(Web3.givenProvider);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\n      \"lowAmount\",\n      `Should be greater than 0`,\n      (val) => parseFloat(val) > 0\n    ),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"USDC\",\n};\n\nconst usdcContract = new web3.eth.Contract(tokenAbi, usdcAddress);\nconst daiContract = new web3.eth.Contract(tokenAbi, daiAddress);\nconst brigeContract = new web3.eth.Contract(bridgeAbi, bridgeAddress);\nconst dappContract = new web3.eth.Contract(dappBrigeAbi, dappBrigeAddress);\n\nconst Ethereum = () => {\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const address = useSelector((state) => state.address.address);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const [loading, setLoading] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  const sendToken = async (stakeAMount, tokenId) => {\n    console.log(\"inside send token\");\n\n    brigeContract.methods\n      .sendToken(stakeAMount, tokenId)\n      .send({\n        from: address,\n      })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash  sendToken\", hash);\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"receipt sendToken\", receipt);\n\n        setLoading(false);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"confirmationNumber sendToken\", confirmationNumber);\n        console.log(\"receipt sendToken\", receipt);\n      })\n      .on(\"error\", (error) => {\n        console.log(\"error sendToken\", error);\n        setLoading(false);\n      });\n  };\n\n  const approveAndSendToken = async (stakeAMount, tokenId, token) => {\n    console.log(\"inside approve and send token\");\n\n    setLoading(true);\n\n    const contract = token === \"USDC\" ? usdcContract : daiContract;\n\n    let approvedAmount = \"\";\n\n    if (checked) {\n      approvedAmount =\n        token === \"USDC\"\n          ? web3.utils.toWei(\"10000000000000000\", \"mwei\")\n          : web3.utils.toWei(\"10000000000000000\", \"ether\");\n    } else {\n      approvedAmount = stakeAMount;\n    }\n\n    console.log(\"approved amount \", approvedAmount);\n\n    contract.methods\n      .approve(bridgeAddress, approvedAmount)\n      .send({\n        from: address,\n      })\n      .on(\"transactionHash\", (hash) => {\n        console.log(\"transactionHash approve \", hash);\n      })\n      .on(\"receipt\", (receipt) => {\n        console.log(\"receipt approve\", receipt);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"confirmationNumber approve\", confirmationNumber);\n        console.log(\"receipt approve\", receipt);\n      })\n      .on(\"error\", (error) => {\n        console.log(\"error approve\", error);\n        setLoading(false);\n      })\n      .then(() => {\n        brigeContract.methods\n          .sendToken(stakeAMount, tokenId)\n          .send({\n            from: address,\n          })\n          .on(\"transactionHash\", (hash) => {\n            console.log(\"transactionHash  sendToken\", hash);\n          })\n          .on(\"receipt\", (receipt) => {\n            console.log(\"receipt sendToken\", receipt);\n\n            setLoading(false);\n          })\n          .on(\"confirmation\", (confirmationNumber, receipt) => {\n            console.log(\"confirmationNumber sendToken\", confirmationNumber);\n            console.log(\"receipt sendToken\", receipt);\n          })\n          .on(\"error\", (error) => {\n            console.log(\"error sendToken\", error);\n            setLoading(false);\n          });\n      });\n  };\n\n  const handleSubmit = async (values) => {\n    console.log(\"values \", values);\n\n    if (!address) {\n      alert(\"Please connect to metamask first\");\n      return;\n    }\n\n    const { value, token } = values;\n\n    console.log(\"value \", value);\n\n    if (token === \"DAPP\") {\n      const dappAmount = (parseFloat(value) * 1e4).toString();\n      setLoading(true);\n\n      dappContract.methods\n        .sendToken(dappAmount)\n        .send({\n          from: address,\n        })\n        .on(\"transactionHash\", (hash) => {\n          console.log(\"transactionHash  sendToken\", hash);\n        })\n        .on(\"receipt\", (receipt) => {\n          console.log(\"receipt sendToken\", receipt);\n\n          setLoading(false);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\"confirmationNumber sendToken\", confirmationNumber);\n          console.log(\"receipt sendToken\", receipt);\n        })\n        .on(\"error\", (error) => {\n          console.log(\"error sendToken\", error);\n          setLoading(false);\n        });\n    } else {\n      const tokenId = token === \"USDC\" ? 0 : 1;\n\n      const contract = token === \"USDC\" ? usdcContract : daiContract;\n\n      const stakeAMount =\n        token === \"USDC\"\n          ? web3.utils.toWei(value, \"mwei\")\n          : web3.utils.toWei(value, \"ether\");\n\n      console.log(\"stakeAMount \", stakeAMount);\n\n      const approvedAmount = await contract.methods\n        .allowance(address, bridgeAddress)\n        .call();\n\n      console.log(\"approvedAmount in contract \", approvedAmount);\n\n      if (approvedAmount > stakeAMount) {\n        sendToken(stakeAMount, tokenId);\n      } else {\n        approveAndSendToken(stakeAMount, tokenId, token);\n      }\n    }\n  };\n\n  console.log(\"checked \", checked);\n\n  return (\n    <div className=\"form-container\">\n      <div>3. Send Tokens Ethereum to EOS</div>\n      <div className=\"login\">\n        {/* <button onClick={connectToMetamask}>\n          {!!address ? \"Connected\" : \"Connect to metamask\"}\n        </button> */}\n\n        <div className=\"tokenform\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            <Form>\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  <option value=\"USDC\">USDC</option>\n                  <option value=\"DAI\">DAI</option>\n                  <option value=\"DAPP\">DAPP</option>\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" />\n              </div>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={checked}\n                  onChange={() => setChecked(!checked)}\n                  disabled={loading}\n                />\n                <span>Infinite Approval</span>\n              </label>\n              <div>\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n\n      <a\n        href=\"https://docs.google.com/document/u/1/d/14K6_DT-pqmBsAd3tLoHD-SKhPO1WCFW7unMKTMzxKx4/edit?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Click here for help\n      </a>\n    </div>\n  );\n};\n\nexport default Ethereum;\n","const Modal = (props) => {\n\n    const { children, show } = props\n    console.log('propssssss----', props)\n    return (\n        <>\n        {show?\n        <div className=\"modalcontainer\">\n            {children}\n        </div>\n        :null\n        }\n        </>\n    )\n}\n\nexport default Modal","import * as React from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./logic/actions/actions\";\n\nconst { useState } = React;\n\nconst ConnectModal = (props) => {\n  const { closeModal, toggleLogin } = props;\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [active, setActive] = useState(-1);\n\n  const connectWallet = async (index) => {\n    try {\n      setActive(index);\n      setLoading(true);\n      await WalletProvider.login(index);\n      const wallet = WalletProvider.getWallet();\n      dispatch(login({ username: wallet?.auth?.accountName }));\n      toggleLogin(true)\n      localStorage.setItem(\"walletType\", index.toString());\n      console.log(\"wallet11-----\", wallet);\n      closeModal();\n\n    } catch (e) {\n      console.log(\"something went wrong \", e);\n      // dispatch(showNotification({ notificationText: 'Failed to connect', notificationType: 2 }))\n    } finally {\n      setLoading(false);\n      setActive(-1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div>\n        Connect wallet\n        <div className=\"closeBtn\" onClick={closeModal}>\n          <p className=\"close-text\">close</p>\n        </div>\n      </div>\n      <div>\n        <button onClick={() => connectWallet(0)} disabled={loading}>\n          {loading && active === 0 ? \"connecting\" : \"Connect with scatter\"}\n        </button>\n      </div>\n      <div>\n        <button onClick={() => connectWallet(1)} disabled={loading}>\n          {loading && active === 1 ? \"connecting\" : \"Connect with Anchor\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectModal;\n","import { useState, useEffect } from \"react\";\nimport Modal from \"./modal\";\nimport ConnectModal from \"./wallets\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"./logic/actions/actions\";\nimport { Ethlogin } from \"./logic/actions/actions\";\nconst ethereum_address = require(\"ethereum-address\");\n\nconst updateSchema = Yup.object().shape({\n  newaddress: Yup.string()\n    .required(\"Enter new ethereum address\")\n    .test(\"ethereumaddress\", `Invalid ethereum address`, (address) =>\n      ethereum_address.isAddress(address)\n    ),\n});\n\nconst initialUpdate = {\n  newaddress: \"\",\n};\n\nconst Eos = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [regstloading, setRegisterLoading] = useState(false);\n  const [updateloading, setUpdateLoading] = useState(false);\n  const [regerrorMsg, setregerrorMsg] = useState(\"\");\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n  const [regsuccessMsg, setregsuccessMsg] = useState(\"\");\n  const [ethaddress, setAddress] = useState(\"\");\n\n  const registerSchema = Yup.object().shape({\n    address: Yup.string()\n      .required(\"Enter ethereum address\")\n      .test(\"ethereumaddress\", `Invalid ethereum address`, (address) => {\n        console.log(\"addddddddddd----\", address);\n        return ethereum_address.isAddress(address);\n      }),\n  });\n\n  const initialRegister = {\n    address: ethaddress,\n  };\n\n  const closeModal = () => {\n    setShow(false);\n  };\n\n  const connectToWallet = async () => {\n    if (walletConnected) {\n      try {\n        const wallet = WalletProvider.getWallet();\n        if (!!wallet) {\n          await WalletProvider.disconnectWallet();\n          dispatch(logout());\n          localStorage.clear();\n          props.toggleLogin(false);\n        }\n      } catch (e) {\n        console.log(\"something went wrong \", e);\n      }\n    } else {\n      setShow(true);\n    }\n  };\n\n  const handleRegister = async (values) => {\n    try {\n      setRegisterLoading(true);\n      const eosAmount = 1;\n      const wallet = WalletProvider.getWallet();\n      const { address } = values;\n      console.log(\"address----\", values);\n      if (!walletConnected) {\n        setregerrorMsg(\"Eos wallet is not connected\");\n      }\n      if (!ethwalletConnected) {\n        setregerrorMsg(\"Ethereum wallet is not connected\");\n      }\n      if (!!wallet) {\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: \"eosio.token\",\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: \"etheosmultok\",\n                  quantity: `${eosAmount.toFixed(4)} EOS`,\n                  memo: \"registration fees\",\n                },\n              },\n              {\n                account: \"etheosmultok\",\n                name: \"registereth\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  account: wallet.auth.accountName,\n                  ethaddress: address,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setRegisterLoading(false);\n          setregsuccessMsg(\"Transaction Success\");\n          setregerrorMsg(\"\");\n        }\n      } else {\n        setRegisterLoading(false);\n      }\n    } catch (e) {\n      console.log(\"err----\", e);\n      setregerrorMsg(e.message);\n      setRegisterLoading(false);\n    } finally {\n      setRegisterLoading(false);\n    }\n  };\n\n  const handleUpdate = async (values) => {\n    try {\n      setUpdateLoading(true);\n      const eosAmount = 1;\n      const wallet = WalletProvider.getWallet();\n      const { newaddress } = values;\n      console.log(\"address----\", newaddress);\n      if (!walletConnected) {\n        seterrorMsg(\"Eos wallet is not connected\");\n      }\n      if (!ethwalletConnected) {\n        seterrorMsg(\"Ethereum wallet is not connected\");\n      }\n      if (!!wallet) {\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: \"eosio.token\",\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: \"etheosmultok\",\n                  quantity: `${eosAmount.toFixed(4)} EOS`,\n                  memo: \"modification fees\",\n                },\n              },\n              {\n                account: \"etheosmultok\",\n                name: \"modethadress\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  account: wallet.auth.accountName,\n                  newethaddress: newaddress,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setUpdateLoading(false);\n          setsuccessMsg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      } else {\n        setUpdateLoading(false);\n      }\n    } catch (e) {\n      seterrorMsg(e.message);\n      setUpdateLoading(false);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n\n  const connectToMetamask = async () => {\n    try {\n      const { ethereum } = window;\n      const { chainId } = ethereum;\n\n      if (chainId === \"0x3\") {\n        if (!!ethereum) {\n          const accounts = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n          setAddress(accounts[0]);\n          dispatch(Ethlogin({ address: accounts[0] }));\n        }\n      } else {\n        alert(\"Please select Ropsten test network then connect\");\n      }\n    } catch (e) {\n      console.log(\"something went wrong \", e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"form-container\">\n        <div>1. Register Ethereum Address on EOS</div>\n        <div className=\"login\">\n          <button className=\"loginbtn\" onClick={connectToWallet}>\n            {walletConnected\n              ? `Logout From ${username}`\n              : \"Connect to Eos Wallet\"}\n          </button>\n          <button onClick={connectToMetamask}>\n            {!!ethaddress ? \"Connected\" : \"Connect to metamask\"}\n          </button>\n          <div className=\"register\">\n            <Formik\n              initialValues={initialRegister}\n              validationSchema={registerSchema}\n              onSubmit={handleRegister}\n            >\n              {({ setFieldValue }) => (\n                <Form>\n                  <div>\n                    <Field\n                      name=\"address\"\n                      placeholder=\"enter ethereum address\"\n                      onClick={() => setFieldValue(\"address\", ethaddress)}\n                    />\n                  </div>\n                  <div>\n                    <ErrorMessage name=\"address\" className=\"error\" />\n                  </div>\n                  <div>\n                    <div className=\"note\">\n                      Note:- 1 EOS will be charged for registration fees.\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"sendbtn\"\n                      disabled={regstloading}\n                    >\n                      {regstloading ? \"registering\" : \"Register\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n        <a\n          href=\"https://docs.google.com/document/d/1peh47G369IqMjHkA3FptsODB5kRNN0DBSc17GNvzX1Q/edit?usp=sharing\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Click here for help\n        </a>\n        {regerrorMsg ? (\n          <div className=\"error\">{regerrorMsg}</div>\n        ) : (\n          <div className=\"success\">{regsuccessMsg}</div>\n        )}\n        {show ? (\n          <Modal show={show}>\n            <ConnectModal\n              closeModal={closeModal}\n              toggleLogin={props.toggleLogin}\n            />\n          </Modal>\n        ) : null}\n      </div>\n\n      <div className=\"form-container\">\n        <div>2. Modify Ethereum Address on EOS</div>\n        <div className=\"login\">\n          <div className=\"register\">\n            <Formik\n              initialValues={initialUpdate}\n              validationSchema={updateSchema}\n              onSubmit={handleUpdate}\n            >\n              {({ setFieldValue }) => (\n                <Form>\n                  <div>\n                    <Field\n                      name=\"newaddress\"\n                      placeholder=\"enter new ethereum address\"\n                      onClick={() => setFieldValue(\"newaddress\", ethaddress)}\n                    />\n                  </div>\n                  <div>\n                    <ErrorMessage name=\"newaddress\" className=\"error\" />\n                  </div>\n                  <div>\n                    <div className=\"note\">\n                      Note:- 1 EOS will be charged for modification fees.\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"sendbtn\"\n                      disabled={updateloading}\n                    >\n                      {updateloading ? \"updating\" : \"Update Address\"}\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n        {errorMsg ? (\n          <div className=\"error\">{errorMsg}</div>\n        ) : (\n          <div className=\"success\">{successMsg}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Eos;\n","import { useState, useEffect } from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n//@ts-ignore\nimport EosApi from \"eosjs-api\";\n\nconst options = {\n  httpEndpoint: \"https://api.kylin.alohaeos.com\",\n};\nconst eos = EosApi(options);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\"lowAmount\", `Should be greater than 0`, (val) => parseInt(val) > 0),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"6,EUSDC\",\n};\n\nconst EosTransaction = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const ethwalletConnected = useSelector(\n    (state) => state.address.ethWalletConnected\n  );\n  const [balances, setUserBalances] = useState([]);\n  const [tokenSymbol, setSymbols] = useState([\"6,EUSDC\"]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n\n  const { loggedIn } = props;\n  const getTokens = async () => {\n    let tokens = [];\n    const requests = await eos.getTableRows({\n      code: \"etheosmultok\",\n      scope: \"etheosmultok\",\n      table: \"acceptedsym1\",\n      json: \"true\",\n    });\n    if (requests.rows.length) {\n      requests.rows.map((row) => {\n        tokens.push(row.dtoken.toString());\n      });\n    }\n    console.log(\"tokesn----\", tokens);\n    setSymbols(tokens);\n    return tokens;\n  };\n\n  const getBalance = async (tokens, account) => {\n    const userbal = [];\n    try {\n      if (tokens.length) {\n        console.log(\"username----\", account);\n        for (const symbol of tokens) {\n          const tokensData = {\n            code: \"etheosmultok\",\n            json: true,\n            limit: 1000,\n            scope: symbol.split(\",\")[1],\n            table: \"available\",\n            table_key: account,\n          };\n          const responses = await fetch(\n            \"https://api.kylin.alohaeos.com/v1/chain/get_table_rows\",\n            {\n              method: \"post\",\n              body: JSON.stringify(tokensData),\n            }\n          );\n\n          const tokensdata = await responses.json();\n          console.log(\"respose----\", tokensdata);\n          if (tokensdata.rows.length) {\n            tokensdata.rows.map((row) => {\n              if (row.account == account) {\n                userbal.push(tokensdata.rows[0].balance);\n              }\n            });\n          }\n        }\n        console.log(\"userbalance ---\", userbal);\n        setUserBalances(userbal);\n      }\n    } catch (e) {\n      console.log(\"errr---\", e);\n      setUserBalances(userbal);\n    }\n  };\n\n  useEffect(() => {\n    getTokens();\n    const getbal = async () => {\n      const tokens = await getTokens();\n      if (walletConnected && tokens.length) {\n        await getBalance(tokens, username);\n      }\n    };\n    if (loggedIn) {\n      getbal();\n    }\n    if (!loggedIn) {\n      setUserBalances([]);\n    }\n  }, [loggedIn]);\n\n  const handleTransfer = async (values) => {\n    try {\n      setLoading(true);\n      const { value, token } = values;\n      const wallet = WalletProvider.getWallet();\n      if (!walletConnected) {\n        seterrorMsg(\"Eos wallet is not connected\");\n      }\n      if (!ethwalletConnected) {\n        seterrorMsg(\"Ethereum wallet is not connected\");\n      }\n      if (!!wallet) {\n        let account;\n        let toAcc ;\n        if(token == '4,DAPP'){\n          account= 'dappservices'\n          toAcc = 'ethdappdepo1'\n        }else{\n          account=\"ddadlptoken1\"\n          toAcc = 'etheosmultok'\n        }\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: account,\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: toAcc,\n                  quantity: `${parseInt(value).toFixed(\n                    parseInt(token.split(\",\")[0])\n                  )} ${token.split(\",\")[1]} `,\n                  memo: `Transfer ${token.split(\",\")[1]} token`,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setLoading(false);\n          setsuccessMsg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (e) {\n      console.log(\"error in treansferinng----\", JSON.parse(JSON.stringify(e)));\n      seterrorMsg(e.message);\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div>4. Send Tokens EOS to Ethereum</div>\n      <div className=\"login\">\n        <div className=\"register\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleTransfer}\n          >\n            <Form>\n              {balances.map((balance) => (\n                <div className=\"userbalance\">{balance}</div>\n              ))}\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" className=\"error\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  {/* {tokenSymbol.map((sym) => (\n                    <option name=\"token\" value={sym}>\n                      {sym.split(\",\")[1]}\n                    </option>\n                  ))} */}\n                  <option value=\"6,EUSDC\">EUSDC</option>\n                  <option value=\"6,DAI\">DAI</option>\n                  <option value=\"4,DAPP\">DAPP</option>\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" className=\"error\" />\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"registerbtn\"\n                  disabled={loading}\n                >\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n      {errorMsg ? (\n        <div className=\"error\">{errorMsg}</div>\n      ) : (\n        <div className=\"success\">{successMsg}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EosTransaction;\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport WalletProvider from \"./walletProvider\";\nimport { login } from \"./logic/actions/actions\";\nimport Ethereum from \"./ethComponent\";\nimport Eos from \"./eosComponent\";\nimport EosTransaction from \"./eostransaction\";\n\nconst { useEffect, useState } = React;\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const toggleLogin = (logged) => {\n    setLoggedIn(logged);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const connectWallet = async (walletType) => {\n      try {\n        await WalletProvider.login(walletType);\n        const wallet = WalletProvider.getWallet();\n\n        if (!!wallet) {\n          dispatch(login({ username: wallet?.auth?.accountName }));\n          toggleLogin(true);\n        }\n      } catch (e) {\n        console.log(\"something went wrong \", e);\n      }\n    };\n\n    const walletType = localStorage.getItem(\"walletType\");\n\n    if (!!walletType) {\n      let wallet = parseInt(walletType);\n\n      if (wallet >= 0) {\n        connectWallet(wallet);\n      }\n    }\n  }, []);\n\n  return (\n    <div>\n      <Eos toggleLogin={toggleLogin} />\n      <Ethereum />\n      <EosTransaction loggedIn={loggedIn} />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    ethWalletConnected: false,\n    address: '',\n}\n\nconst ethReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ETHLOGIN\":\n            return {\n                ...state,\n                ethWalletConnected: true,\n                address: action.address\n            }\n        default:\n            return state\n    }\n}\n\nexport default ethReducer","const initialState = {\n    walletConnected: false,\n    username: '',\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            return {\n                ...state,\n                walletConnected: true,\n                username: action.username\n            }\n\n        case \"LOGOUT\":\n            return {\n                ...state,\n                walletConnected: false,\n                username: ''\n            }\n\n            // case \"ETHLOGIN\":\n            //     return {\n            //         ...state,\n            //         ethWalletConnected: true,\n            //         username: action.username\n            //     }\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import { createStore, combineReducers } from 'redux'\nimport ethReducer from './eth.reducer'\nimport userReducer from './user.reducer'\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    address: ethReducer\n})\n\nconst store = createStore(rootReducer)\n\nexport default store","import store from './store'\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport store from './logic/reducers'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n   <React.StrictMode >\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}