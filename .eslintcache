[{"/home/atul/Desktop/clone-folder/USDCbridge/src/eosComponent.js":"1","/home/atul/Desktop/clone-folder/USDCbridge/src/abi.js":"2","/home/atul/Desktop/clone-folder/USDCbridge/src/index.js":"3","/home/atul/Desktop/clone-folder/USDCbridge/src/modal.js":"4","/home/atul/Desktop/clone-folder/USDCbridge/src/walletProvider.js":"5","/home/atul/Desktop/clone-folder/USDCbridge/src/wallets.js":"6","/home/atul/Desktop/clone-folder/USDCbridge/src/ethComponent.js":"7","/home/atul/Desktop/clone-folder/USDCbridge/src/eostransaction.js":"8","/home/atul/Desktop/clone-folder/USDCbridge/src/App.js":"9","/home/atul/Desktop/clone-folder/USDCbridge/src/logic/reducers/store.js":"10","/home/atul/Desktop/clone-folder/USDCbridge/src/reportWebVitals.js":"11","/home/atul/Desktop/clone-folder/USDCbridge/src/logic/reducers/index.js":"12","/home/atul/Desktop/clone-folder/USDCbridge/src/logic/actions/actions.js":"13","/home/atul/Desktop/clone-folder/USDCbridge/src/logic/reducers/user.reducer.js":"14"},{"size":5564,"mtime":1608280555949,"results":"15","hashOfConfig":"16"},{"size":16850,"mtime":1608101862074,"results":"17","hashOfConfig":"18"},{"size":627,"mtime":1608193407129,"results":"19","hashOfConfig":"18"},{"size":289,"mtime":1608101862170,"results":"20","hashOfConfig":"18"},{"size":1421,"mtime":1608101862170,"results":"21","hashOfConfig":"18"},{"size":1684,"mtime":1608197233791,"results":"22","hashOfConfig":"18"},{"size":6802,"mtime":1608187070717,"results":"23","hashOfConfig":"18"},{"size":6565,"mtime":1609155512794,"results":"24","hashOfConfig":"16"},{"size":1419,"mtime":1608198069539,"results":"25","hashOfConfig":"16"},{"size":219,"mtime":1608192944583,"results":"26","hashOfConfig":"18"},{"size":362,"mtime":1607691129803,"results":"27","hashOfConfig":"16"},{"size":49,"mtime":1608192934445,"results":"28","hashOfConfig":"18"},{"size":176,"mtime":1608192984385,"results":"29","hashOfConfig":"16"},{"size":550,"mtime":1608193001496,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t482sy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"156tolq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/atul/Desktop/clone-folder/USDCbridge/src/eosComponent.js",["63"],"/home/atul/Desktop/clone-folder/USDCbridge/src/abi.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/index.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/modal.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/walletProvider.js",[],["64","65"],"/home/atul/Desktop/clone-folder/USDCbridge/src/wallets.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/ethComponent.js",[],["66","67"],"/home/atul/Desktop/clone-folder/USDCbridge/src/eostransaction.js",["68","69","70","71","72","73"],"import { useState, useEffect } from \"react\";\nimport WalletProvider from \"./walletProvider\";\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n//@ts-ignore\nimport EosApi from \"eosjs-api\";\n\nconst options = {\n  httpEndpoint: \"https://api.kylin.alohaeos.com\",\n};\nconst eos = EosApi(options);\n\nconst schema = Yup.object().shape({\n  value: Yup.number()\n    .required(\"Enter value of token\")\n    .test(\"lowAmount\", `Should be greater than 0`, (val) => parseInt(val) > 0),\n  token: Yup.string().required(\"Select a token type\"),\n});\n\nconst initialValues = {\n  value: \"\",\n  token: \"6,EUSDC\",\n};\n\nconst EosTransaction = (props) => {\n  const username = useSelector((state) => state.user.username);\n  const walletConnected = useSelector((state) => state.user.walletConnected);\n  const [balances, setUserBalances] = useState([]);\n  const [tokenSymbol, setSymbols] = useState([\"6,EUSDC\"]);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, seterrorMsg] = useState(\"\");\n  const [successMsg, setsuccessMsg] = useState(\"\");\n\n  const { loggedIn } = props;\n  const getTokens = async () => {\n    let tokens = [];\n    const requests = await eos.getTableRows({\n      code: \"etheosmultok\",\n      scope: \"etheosmultok\",\n      table: \"acceptedsym1\",\n      json: \"true\",\n    });\n    if (requests.rows.length) {\n      requests.rows.map((row) => {\n        tokens.push(row.dtoken.toString());\n      });\n    }\n    console.log(\"tokesn----\", tokens);\n    setSymbols(tokens);\n    return tokens;\n  };\n\n  const getBalance = async (tokens, account) => {\n    const userbal = [];\n    try {\n      if (tokens.length) {\n        console.log(\"username----\", account);\n        for (const symbol of tokens) {\n          const tokensData = {\n            code: \"etheosmultok\",\n            json: true,\n            limit: 1000,\n            scope: symbol.split(\",\")[1],\n            table: \"available\",\n            table_key: account,\n          };\n          const responses = await fetch(\n            \"https://api.kylin.alohaeos.com/v1/chain/get_table_rows\",\n            {\n              method: \"post\",\n              body: JSON.stringify(tokensData),\n            }\n          );\n\n          const tokensdata = await responses.json();\n          console.log(\"respose----\", tokensdata);\n          if (tokensdata.rows.length) {\n            tokensdata.rows.map((row) => {\n              if (row.account == account) {\n                userbal.push(tokensdata.rows[0].balance);\n              }\n            });\n          }\n        }\n        console.log(\"userbalance ---\", userbal);\n        setUserBalances(userbal);\n      }\n    } catch (e) {\n      console.log(\"errr---\", e);\n      setUserBalances(userbal);\n    }\n  };\n\n  useEffect(() => {\n    getTokens();\n    const getbal = async () => {\n      const tokens = await getTokens();\n      if (walletConnected && tokens.length) {\n        await getBalance(tokens, username);\n      }\n    };\n    if (loggedIn) {\n      getbal();\n    }\n    if (!loggedIn) {\n      setUserBalances([]);\n    }\n  }, [loggedIn]);\n\n  const handleTransfer = async (values) => {\n    try {\n      setLoading(true);\n      const { value, token } = values;\n      const wallet = WalletProvider.getWallet();\n      if (!!wallet) {\n        let account;\n        let toAcc ;\n        if(token == '4,DAPP'){\n          account= 'dappservices'\n          toAcc = 'ethdappdepo1'\n        }else{\n          account=\"ddadlptoken1\"\n          toAcc = 'etheosmultok'\n        }\n        const result = await wallet.eosApi.transact(\n          {\n            actions: [\n              {\n                account: account,\n                name: \"transfer\",\n                authorization: [\n                  {\n                    actor: wallet.auth.accountName,\n                    permission: wallet.auth.permission,\n                  },\n                ],\n                data: {\n                  from: wallet.auth.accountName,\n                  to: toAcc,\n                  quantity: `${parseInt(value).toFixed(\n                    parseInt(token.split(\",\")[0])\n                  )} ${token.split(\",\")[1]} `,\n                  memo: `Transfer ${token.split(\",\")[1]} token`,\n                },\n              },\n            ],\n          },\n          {\n            broadcast: true,\n            blocksBehind: 3,\n            expireSeconds: 60,\n          }\n        );\n        if (result) {\n          setLoading(false);\n          setsuccessMsg(\"Transaction Success\");\n          seterrorMsg(\"\");\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (e) {\n      console.log(\"error in treansferinng----\", JSON.parse(JSON.stringify(e)));\n      seterrorMsg(e.message);\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div>3. Send Tokens EOS to Ethereum</div>\n      <div className=\"login\">\n        <div className=\"register\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleTransfer}\n          >\n            <Form>\n              {balances.map((balance) => (\n                <div className=\"userbalance\">{balance}</div>\n              ))}\n              <div>\n                <Field name=\"value\" placeholder=\"enter amount\" />\n              </div>\n              <div>\n                <ErrorMessage name=\"value\" className=\"error\" />\n              </div>\n              <div>\n                <Field as=\"select\" name=\"token\">\n                  {/* {tokenSymbol.map((sym) => (\n                    <option name=\"token\" value={sym}>\n                      {sym.split(\",\")[1]}\n                    </option>\n                  ))} */}\n                  <option value=\"6,EUSDC\">EUSDC</option>\n                  <option value=\"6,DAI\">DAI</option>\n                  <option value=\"4,DAPP\">DAPP</option>\n                </Field>\n              </div>\n              <div>\n                <ErrorMessage name=\"token\" className=\"error\" />\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"registerbtn\"\n                  disabled={loading}\n                >\n                  {loading ? \"Sending Token\" : \"Send Token\"}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n      {errorMsg ? (\n        <div className=\"error\">{errorMsg}</div>\n      ) : (\n        <div className=\"success\">{successMsg}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EosTransaction;\n",["74","75"],"/home/atul/Desktop/clone-folder/USDCbridge/src/App.js",["76"],"/home/atul/Desktop/clone-folder/USDCbridge/src/logic/reducers/store.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/reportWebVitals.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/logic/reducers/index.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/logic/actions/actions.js",[],"/home/atul/Desktop/clone-folder/USDCbridge/src/logic/reducers/user.reducer.js",[],{"ruleId":"77","severity":1,"message":"78","line":1,"column":20,"nodeType":"79","messageId":"80","endLine":1,"endColumn":29},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"77","severity":1,"message":"87","line":30,"column":10,"nodeType":"79","messageId":"80","endLine":30,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":45,"column":31,"nodeType":"90","messageId":"91","endLine":45,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":79,"column":39,"nodeType":"90","messageId":"91","endLine":79,"endColumn":41},{"ruleId":"92","severity":1,"message":"93","line":80,"column":31,"nodeType":"94","messageId":"95","endLine":80,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":109,"column":6,"nodeType":"98","endLine":109,"endColumn":16,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"93","line":119,"column":18,"nodeType":"94","messageId":"95","endLine":119,"endColumn":20},{"ruleId":"81","replacedBy":"100"},{"ruleId":"83","replacedBy":"101"},{"ruleId":"96","severity":1,"message":"102","line":48,"column":8,"nodeType":"98","endLine":48,"endColumn":10,"suggestions":"103"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"'tokenSymbol' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'username' and 'walletConnected'. Either include them or remove the dependency array.","ArrayExpression",["106"],["104"],["105"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [loggedIn, username, walletConnected]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},[3069,3079],"[loggedIn, username, walletConnected]",[1241,1243],"[dispatch]"]